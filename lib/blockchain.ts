// Generated by @wagmi/cli@0.1.3 on 2/23/2023 at 7:32:45 AM
import {
  UseContractConfig,
  UseContractEventConfig,
  UseContractReadConfig,
  UseContractWriteConfig,
  UsePrepareContractWriteConfig,
  useContract,
  useContractEvent,
  useContractRead,
  useContractWrite,
  usePrepareContractWrite,
} from 'wagmi'
import { PrepareWriteContractResult, WriteContractMode } from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// erc20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc20ABI = [
  {
    type: 'event',
    inputs: [
      { name: 'owner', type: 'address', indexed: true },
      { name: 'spender', type: 'address', indexed: true },
      { name: 'value', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    inputs: [
      { name: 'from', type: 'address', indexed: true },
      { name: 'to', type: 'address', indexed: true },
      { name: 'value', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', type: 'address' },
      { name: 'spender', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', type: 'uint256' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'decimals', outputs: [{ name: '', type: 'uint8' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'name', outputs: [{ name: '', type: 'string' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'symbol', outputs: [{ name: '', type: 'string' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'totalSupply', outputs: [{ name: '', type: 'uint256' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'recipient', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sender', type: 'address' },
      { name: 'recipient', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PixelPooly
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const pixelPoolyABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'erc721Storage', internalType: 'address', type: 'address' },
    ],
  },
  { type: 'error', inputs: [], name: 'AlreadyMinted' },
  { type: 'error', inputs: [], name: 'ERC721Unauthorized' },
  { type: 'error', inputs: [], name: 'InvalidRecipient' },
  { type: 'error', inputs: [], name: 'NewOwnerIsZeroAddress' },
  { type: 'error', inputs: [], name: 'NoHandoverRequest' },
  { type: 'error', inputs: [], name: 'NotMinted' },
  { type: 'error', inputs: [], name: 'Unauthorized' },
  { type: 'error', inputs: [], name: 'UnsafeRecipient' },
  { type: 'error', inputs: [], name: 'WrongFrom' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'spender', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'erc721Storage', internalType: 'address', type: 'address', indexed: false }],
    name: 'ERC721StorageUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'pendingOwner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnershipHandoverCanceled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'pendingOwner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnershipHandoverRequested',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'oldOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      { name: 'roles', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'RolesUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [],
  },
  { stateMutability: 'payable', type: 'function', inputs: [], name: 'cancelOwnershipHandover', outputs: [] },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'pendingOwner', internalType: 'address', type: 'address' }],
    name: 'completeOwnershipHandover',
    outputs: [],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'contractURI', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'equip',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer[]', type: 'uint8[]' },
      { name: 'frame', internalType: 'uint8[]', type: 'uint8[]' },
    ],
    name: 'equipBatch',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getERC721Storage',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'getLicenseName', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'getLicenseURI', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRoles',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasAllRoles',
    outputs: [{ name: 'result', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasAnyRole',
    outputs: [{ name: 'result', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'licenseVersion',
    outputs: [{ name: '', internalType: 'enum LicenseVersion', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'to', internalType: 'address', type: 'address' }],
    name: 'mint',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'name', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
    name: 'ordinalsFromRoles',
    outputs: [{ name: 'ordinals', internalType: 'uint8[]', type: 'uint8[]' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'owner', outputs: [{ name: 'result', internalType: 'address', type: 'address' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'pendingOwner', internalType: 'address', type: 'address' }],
    name: 'ownershipHandoverExpiresAt',
    outputs: [{ name: 'result', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ownershipHandoverValidFor',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'preview',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'imageBytes', internalType: 'bytes', type: 'bytes' }],
    name: 'renderPreview',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  { stateMutability: 'payable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
    name: 'renounceRoles',
    outputs: [],
  },
  { stateMutability: 'payable', type: 'function', inputs: [], name: 'requestOwnershipHandover', outputs: [] },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRoles',
    outputs: [],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'ordinals', internalType: 'uint8[]', type: 'uint8[]' }],
    name: 'rolesFromOrdinals',
    outputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'user', internalType: 'address', type: 'address' }],
    name: 'rolesOf',
    outputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'erc721Storage', internalType: 'address', type: 'address' }],
    name: 'setStorage',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'symbol', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'totalSupply', outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'traitsBytes', internalType: 'bytes', type: 'bytes' }],
    name: 'traitsPreview',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PixelPoolyAssets
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const pixelPoolyAssetsABI = [
  { stateMutability: 'nonpayable', type: 'constructor', inputs: [{ name: 'owner', internalType: 'address', type: 'address' }] },
  { type: 'error', inputs: [], name: 'Unauthorized' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      { name: 'ownerCandidate', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnerUpdateInitiated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  { stateMutability: 'payable', type: 'function', inputs: [], name: 'confirmOwner', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'layer', internalType: 'uint256', type: 'uint256' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'getDetails',
    outputs: [
      { name: '', internalType: 'string', type: 'string' },
      { name: '', internalType: 'string', type: 'string' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'eid', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getDetails',
    outputs: [
      { name: '', internalType: 'string', type: 'string' },
      { name: '', internalType: 'string', type: 'string' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'getDetails',
    outputs: [
      { name: '', internalType: 'string', type: 'string' },
      { name: '', internalType: 'string', type: 'string' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'getElement',
    outputs: [
      {
        name: '',
        internalType: 'struct IAssets.Element',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tier', internalType: 'enum IAssets.Tier', type: 'uint8' },
          { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
          { name: 'frame', internalType: 'uint8', type: 'uint8' },
          { name: 'expiry', internalType: 'uint256', type: 'uint256' },
          { name: 'traitName', internalType: 'string', type: 'string' },
          { name: 'traitDescription', internalType: 'string', type: 'string' },
          {
            name: 'stats',
            internalType: 'struct IAssets.Stat[]',
            type: 'tuple[]',
            components: [
              { name: 'category', internalType: 'enum IAssets.StatCategory', type: 'uint8' },
              { name: 'value', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'svg', internalType: 'string', type: 'string' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'eid', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getElement',
    outputs: [
      {
        name: '',
        internalType: 'struct IAssets.Element',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tier', internalType: 'enum IAssets.Tier', type: 'uint8' },
          { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
          { name: 'frame', internalType: 'uint8', type: 'uint8' },
          { name: 'expiry', internalType: 'uint256', type: 'uint256' },
          { name: 'traitName', internalType: 'string', type: 'string' },
          { name: 'traitDescription', internalType: 'string', type: 'string' },
          {
            name: 'stats',
            internalType: 'struct IAssets.Stat[]',
            type: 'tuple[]',
            components: [
              { name: 'category', internalType: 'enum IAssets.StatCategory', type: 'uint8' },
              { name: 'value', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'svg', internalType: 'string', type: 'string' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'eid', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getExpiryTime',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' }],
    name: 'getIndexInfoFromLayer',
    outputs: [
      {
        name: '',
        internalType: 'struct IAssets.IndexInfo',
        type: 'tuple',
        components: [
          { name: 'index', internalType: 'uint8', type: 'uint8' },
          { name: 'isSet', internalType: 'bool', type: 'bool' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_index', internalType: 'uint256', type: 'uint256' }],
    name: 'getLayerFromIndex',
    outputs: [{ name: 'layerId', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'eid', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getSVG',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'getSVG',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'eid', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getStats',
    outputs: [
      {
        name: 'stats',
        internalType: 'struct IAssets.Stat[]',
        type: 'tuple[]',
        components: [
          { name: 'category', internalType: 'enum IAssets.StatCategory', type: 'uint8' },
          { name: 'value', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'getStats',
    outputs: [
      {
        name: 'stats',
        internalType: 'struct IAssets.Stat[]',
        type: 'tuple[]',
        components: [
          { name: 'category', internalType: 'enum IAssets.StatCategory', type: 'uint8' },
          { name: 'value', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'layer', internalType: 'uint256', type: 'uint256' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'getStats',
    outputs: [
      {
        name: 'stats',
        internalType: 'struct IAssets.Stat[]',
        type: 'tuple[]',
        components: [
          { name: 'category', internalType: 'enum IAssets.StatCategory', type: 'uint8' },
          { name: 'value', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'eid', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getTier',
    outputs: [{ name: '', internalType: 'enum IAssets.Tier', type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTotalFrames',
    outputs: [{ name: '', internalType: 'uint16[]', type: 'uint16[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' }],
    name: 'getTotalFramesPerLayer',
    outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTotalLayers',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTotalPossibleFrames',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'owner', outputs: [{ name: '', internalType: 'address', type: 'address' }] },
  { stateMutability: 'payable', type: 'function', inputs: [], name: 'renounceOwner', outputs: [] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
      {
        name: 'element',
        internalType: 'struct IAssets.Element',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tier', internalType: 'enum IAssets.Tier', type: 'uint8' },
          { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
          { name: 'frame', internalType: 'uint8', type: 'uint8' },
          { name: 'expiry', internalType: 'uint256', type: 'uint256' },
          { name: 'traitName', internalType: 'string', type: 'string' },
          { name: 'traitDescription', internalType: 'string', type: 'string' },
          {
            name: 'stats',
            internalType: 'struct IAssets.Stat[]',
            type: 'tuple[]',
            components: [
              { name: 'category', internalType: 'enum IAssets.StatCategory', type: 'uint8' },
              { name: 'value', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'svg', internalType: 'string', type: 'string' },
        ],
      },
    ],
    name: 'setElement',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
      { name: 'svg_', internalType: 'string', type: 'string' },
    ],
    name: 'setSVG',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
      { name: 'traitName', internalType: 'string', type: 'string' },
      { name: 'traitDescription', internalType: 'string', type: 'string' },
    ],
    name: 'setTraitData',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PixelPoolyRender
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const pixelPoolyRenderABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_svgLibrary_', internalType: 'address', type: 'address' },
      { name: '_svgRegistry_', internalType: 'address', type: 'address' },
      { name: 'owner', internalType: 'address', type: 'address' },
    ],
  },
  { type: 'error', inputs: [], name: 'Unauthorized' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: '_bytes32', internalType: 'bytes32', type: 'bytes32' }],
    name: 'bytes32ToString',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'owner', outputs: [{ name: '', internalType: 'address', type: 'address' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_input', internalType: 'bytes', type: 'bytes' }],
    name: 'render',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'svgLibrary', outputs: [{ name: '', internalType: 'address', type: 'address' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'svgRegistry', outputs: [{ name: '', internalType: 'address', type: 'address' }] },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: '_uint8', internalType: 'uint8', type: 'uint8' }],
    name: 'toByte',
    outputs: [{ name: '', internalType: 'bytes1', type: 'bytes1' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PixelPoolyStorage
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const pixelPoolyStorageABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'pixelPoolyRender', internalType: 'address', type: 'address' },
      { name: 'pixelPoolyTraits', internalType: 'address', type: 'address' },
      {
        name: '_contractURI',
        internalType: 'struct ERC721Storage.ContractURI',
        type: 'tuple',
        components: [
          { name: 'name', internalType: 'string', type: 'string' },
          { name: 'description', internalType: 'string', type: 'string' },
          { name: 'image', internalType: 'string', type: 'string' },
          { name: 'externalLink', internalType: 'string', type: 'string' },
          { name: 'sellerFeeBasisPoints', internalType: 'string', type: 'string' },
          { name: 'feeRecipient', internalType: 'string', type: 'string' },
        ],
      },
    ],
  },
  { type: 'error', inputs: [], name: 'NewOwnerIsZeroAddress' },
  { type: 'error', inputs: [], name: 'NoHandoverRequest' },
  { type: 'error', inputs: [], name: 'Unauthorized' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'contractURI',
        internalType: 'struct ERC721Storage.ContractURI',
        type: 'tuple',
        components: [
          { name: 'name', internalType: 'string', type: 'string' },
          { name: 'description', internalType: 'string', type: 'string' },
          { name: 'image', internalType: 'string', type: 'string' },
          { name: 'externalLink', internalType: 'string', type: 'string' },
          { name: 'sellerFeeBasisPoints', internalType: 'string', type: 'string' },
          { name: 'feeRecipient', internalType: 'string', type: 'string' },
        ],
        indexed: false,
      },
    ],
    name: 'ContractURIUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'pendingOwner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnershipHandoverCanceled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'pendingOwner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnershipHandoverRequested',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'oldOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      { name: 'roles', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'RolesUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'svgRender', internalType: 'address', type: 'address', indexed: false }],
    name: 'SvgRenderUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'traitsFetch', internalType: 'address', type: 'address', indexed: false }],
    name: 'TraitsFetchUpdated',
  },
  { stateMutability: 'payable', type: 'function', inputs: [], name: 'cancelOwnershipHandover', outputs: [] },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'pendingOwner', internalType: 'address', type: 'address' }],
    name: 'completeOwnershipHandover',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'constructContractURI',
    outputs: [{ name: 'uri', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'input0', internalType: 'bytes', type: 'bytes' },
      { name: 'input1', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'constructTokenURI',
    outputs: [{ name: 'uri', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'disableElement',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'enableElement',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'erc721ImageSignalRenderInstance',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'erc721ImageSignalTraitsInstance',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'erc721KInstance',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'data', internalType: 'bytes', type: 'bytes' }],
    name: 'formatTraitsBytes',
    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      {
        name: 'character',
        internalType: 'struct IPixelCharacter.Character',
        type: 'tuple',
        components: [
          { name: 'bg', internalType: 'uint8', type: 'uint8' },
          { name: 'body', internalType: 'uint8', type: 'uint8' },
          { name: 'head', internalType: 'uint8', type: 'uint8' },
          { name: 'bodyLower', internalType: 'uint8', type: 'uint8' },
          { name: 'left', internalType: 'uint8', type: 'uint8' },
          { name: 'right', internalType: 'uint8', type: 'uint8' },
          { name: 'headAcc', internalType: 'uint8', type: 'uint8' },
          { name: 'faceAcc', internalType: 'uint8', type: 'uint8' },
          { name: 'bodyAcc', internalType: 'uint8', type: 'uint8' },
          { name: 'bodyLowerAcc', internalType: 'uint8', type: 'uint8' },
          { name: 'leftAcc', internalType: 'uint8', type: 'uint8' },
          { name: 'rightAcc', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
    name: 'formatTraitsBytesFromCharacter',
    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getCharacter',
    outputs: [
      {
        name: '',
        internalType: 'struct IPixelCharacter.Character',
        type: 'tuple',
        components: [
          { name: 'bg', internalType: 'uint8', type: 'uint8' },
          { name: 'body', internalType: 'uint8', type: 'uint8' },
          { name: 'head', internalType: 'uint8', type: 'uint8' },
          { name: 'bodyLower', internalType: 'uint8', type: 'uint8' },
          { name: 'left', internalType: 'uint8', type: 'uint8' },
          { name: 'right', internalType: 'uint8', type: 'uint8' },
          { name: 'headAcc', internalType: 'uint8', type: 'uint8' },
          { name: 'faceAcc', internalType: 'uint8', type: 'uint8' },
          { name: 'bodyAcc', internalType: 'uint8', type: 'uint8' },
          { name: 'bodyLowerAcc', internalType: 'uint8', type: 'uint8' },
          { name: 'leftAcc', internalType: 'uint8', type: 'uint8' },
          { name: 'rightAcc', internalType: 'uint8', type: 'uint8' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getContractDescription',
    outputs: [
      {
        name: '',
        internalType: 'struct ERC721Storage.ContractURI',
        type: 'tuple',
        components: [
          { name: 'name', internalType: 'string', type: 'string' },
          { name: 'description', internalType: 'string', type: 'string' },
          { name: 'image', internalType: 'string', type: 'string' },
          { name: 'externalLink', internalType: 'string', type: 'string' },
          { name: 'sellerFeeBasisPoints', internalType: 'string', type: 'string' },
          { name: 'feeRecipient', internalType: 'string', type: 'string' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getERC721KRender',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getERC72KTraits',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getImageBytes',
    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getPreview',
    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'getStore', outputs: [{ name: '', internalType: 'address', type: 'address' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getTraitsBytes',
    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getUnlockedTraits',
    outputs: [
      {
        name: 'traits',
        internalType: 'struct IAssets.Element[]',
        type: 'tuple[]',
        components: [
          { name: 'id', internalType: 'bytes32', type: 'bytes32' },
          { name: 'tier', internalType: 'enum IAssets.Tier', type: 'uint8' },
          { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
          { name: 'frame', internalType: 'uint8', type: 'uint8' },
          { name: 'expiry', internalType: 'uint256', type: 'uint256' },
          { name: 'traitName', internalType: 'string', type: 'string' },
          { name: 'traitDescription', internalType: 'string', type: 'string' },
          {
            name: 'stats',
            internalType: 'struct IAssets.Stat[]',
            type: 'tuple[]',
            components: [
              { name: 'category', internalType: 'enum IAssets.StatCategory', type: 'uint8' },
              { name: 'value', internalType: 'uint8', type: 'uint8' },
            ],
          },
          { name: 'svg', internalType: 'string', type: 'string' },
        ],
      },
    ],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRoles',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasAllRoles',
    outputs: [{ name: 'result', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasAnyRole',
    outputs: [{ name: 'result', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'isFrameActive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
    name: 'ordinalsFromRoles',
    outputs: [{ name: 'ordinals', internalType: 'uint8[]', type: 'uint8[]' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'owner', outputs: [{ name: 'result', internalType: 'address', type: 'address' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'pendingOwner', internalType: 'address', type: 'address' }],
    name: 'ownershipHandoverExpiresAt',
    outputs: [{ name: 'result', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ownershipHandoverValidFor',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'pixelPoolyAssetsInstance',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'pixelStoreInstance',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'input', internalType: 'bytes', type: 'bytes' }],
    name: 'render',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  { stateMutability: 'payable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
    name: 'renounceRoles',
    outputs: [],
  },
  { stateMutability: 'payable', type: 'function', inputs: [], name: 'requestOwnershipHandover', outputs: [] },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRoles',
    outputs: [],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'ordinals', internalType: 'uint8[]', type: 'uint8[]' }],
    name: 'rolesFromOrdinals',
    outputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'user', internalType: 'address', type: 'address' }],
    name: 'rolesOf',
    outputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'contractURI',
        internalType: 'struct ERC721Storage.ContractURI',
        type: 'tuple',
        components: [
          { name: 'name', internalType: 'string', type: 'string' },
          { name: 'description', internalType: 'string', type: 'string' },
          { name: 'image', internalType: 'string', type: 'string' },
          { name: 'externalLink', internalType: 'string', type: 'string' },
          { name: 'sellerFeeBasisPoints', internalType: 'string', type: 'string' },
          { name: 'feeRecipient', internalType: 'string', type: 'string' },
        ],
      },
    ],
    name: 'setContractURI',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_erc721KInstance', internalType: 'address', type: 'address' }],
    name: 'setERC721KInstance',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'setLayerFrameByController',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'setLayerFrameByERC721K',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'setLayerFrameByOwner',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_pixelPoolyAssetsInstance', internalType: 'address', type: 'address' }],
    name: 'setPixelPoolyAssetsInstance',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_pixelStoreInstance', internalType: 'address', type: 'address' }],
    name: 'setPixelStoreInstance',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'signal',
        internalType: 'struct PixelPoolyStorage.SignalDetails',
        type: 'tuple',
        components: [
          { name: 'signalDescription', internalType: 'string', type: 'string' },
          { name: 'frameId', internalType: 'uint8', type: 'uint8' },
          { name: 'expiry', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
    name: 'setSignal',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'svgRender', internalType: 'address', type: 'address' }],
    name: 'setSvgRender',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'traitsFetch', internalType: 'address', type: 'address' }],
    name: 'setTraitsFetch',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PixelPoolyTraits
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const pixelPoolyTraitsABI = [
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_input', internalType: 'bytes', type: 'bytes' }],
    name: 'fetch',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PixelStore
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const pixelStoreABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'tiers', internalType: 'enum IAssets.Tier[]', type: 'uint8[]' },
      { name: 'prices', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '_pixelAssets', internalType: 'address', type: 'address' },
      { name: '_owner', internalType: 'address', type: 'address' },
    ],
  },
  { type: 'error', inputs: [], name: 'NewOwnerIsZeroAddress' },
  { type: 'error', inputs: [], name: 'NoHandoverRequest' },
  { type: 'error', inputs: [], name: 'Unauthorized' },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'pendingOwner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnershipHandoverCanceled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'pendingOwner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnershipHandoverRequested',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'oldOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      { name: 'roles', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'RolesUpdated',
  },
  { stateMutability: 'payable', type: 'function', inputs: [], name: 'cancelOwnershipHandover', outputs: [] },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'pendingOwner', internalType: 'address', type: 'address' }],
    name: 'completeOwnershipHandover',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'erc721KStorage',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'layer', internalType: 'uint8', type: 'uint8' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'getFramePrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'layers', internalType: 'uint8[]', type: 'uint8[]' },
      { name: 'frames', internalType: 'uint8[]', type: 'uint8[]' },
    ],
    name: 'getFramePrices',
    outputs: [{ name: 'prices', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tier', internalType: 'enum IAssets.Tier', type: 'uint8' }],
    name: 'getTierPrice',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tiers', internalType: 'enum IAssets.Tier[]', type: 'uint8[]' }],
    name: 'getTierPrices',
    outputs: [{ name: 'prices', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRoles',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasAllRoles',
    outputs: [{ name: 'result', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasAnyRole',
    outputs: [{ name: 'result', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'isEnabled',
    outputs: [{ name: 'unlocked', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalReceived',
    outputs: [{ name: 'totalETH', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
    name: 'ordinalsFromRoles',
    outputs: [{ name: 'ordinals', internalType: 'uint8[]', type: 'uint8[]' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'owner', outputs: [{ name: 'result', internalType: 'address', type: 'address' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'pendingOwner', internalType: 'address', type: 'address' }],
    name: 'ownershipHandoverExpiresAt',
    outputs: [{ name: 'result', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ownershipHandoverValidFor',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'pixelAssets', outputs: [{ name: '', internalType: 'address', type: 'address' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'release',
    outputs: [],
  },
  { stateMutability: 'payable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
    name: 'renounceRoles',
    outputs: [],
  },
  { stateMutability: 'payable', type: 'function', inputs: [], name: 'requestOwnershipHandover', outputs: [] },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRoles',
    outputs: [],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'ordinals', internalType: 'uint8[]', type: 'uint8[]' }],
    name: 'rolesFromOrdinals',
    outputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'user', internalType: 'address', type: 'address' }],
    name: 'rolesOf',
    outputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_erc721KStorage', internalType: 'address', type: 'address' }],
    name: 'setERC721KStorage',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer', type: 'uint8' },
      { name: 'frame', internalType: 'uint8', type: 'uint8' },
    ],
    name: 'unlock',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'layer', internalType: 'enum IPixelCharacter.Layer[]', type: 'uint8[]' },
      { name: 'frame', internalType: 'uint8[]', type: 'uint8[]' },
    ],
    name: 'unlockBatch',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PixelUniverse
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const pixelUniverseABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_erc721KInstance', internalType: 'address', type: 'address' },
      { name: '_pixelStoreInstance', internalType: 'address', type: 'address' },
      { name: '_owner', internalType: 'address', type: 'address' },
    ],
  },
  { type: 'error', inputs: [], name: 'NewOwnerIsZeroAddress' },
  { type: 'error', inputs: [], name: 'NoHandoverRequest' },
  { type: 'error', inputs: [], name: 'Unauthorized' },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'pendingOwner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnershipHandoverCanceled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'pendingOwner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnershipHandoverRequested',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'oldOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'user', internalType: 'address', type: 'address', indexed: true },
      { name: 'roles', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'RolesUpdated',
  },
  { stateMutability: 'payable', type: 'function', inputs: [], name: 'cancelOwnershipHandover', outputs: [] },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'pendingOwner', internalType: 'address', type: 'address' }],
    name: 'completeOwnershipHandover',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'erc721KInstance',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'freeMinted',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'grantRoles',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasAllRoles',
    outputs: [{ name: 'result', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'hasAnyRole',
    outputs: [{ name: 'result', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'frames', internalType: 'uint8[]', type: 'uint8[]' },
    ],
    name: 'mintWithFrames',
    outputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
    name: 'ordinalsFromRoles',
    outputs: [{ name: 'ordinals', internalType: 'uint8[]', type: 'uint8[]' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'owner', outputs: [{ name: 'result', internalType: 'address', type: 'address' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'pendingOwner', internalType: 'address', type: 'address' }],
    name: 'ownershipHandoverExpiresAt',
    outputs: [{ name: 'result', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ownershipHandoverValidFor',
    outputs: [{ name: '', internalType: 'uint64', type: 'uint64' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'pixelStoreInstance',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  { stateMutability: 'payable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
    name: 'renounceRoles',
    outputs: [],
  },
  { stateMutability: 'payable', type: 'function', inputs: [], name: 'requestOwnershipHandover', outputs: [] },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'roles', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeRoles',
    outputs: [],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'ordinals', internalType: 'uint8[]', type: 'uint8[]' }],
    name: 'rolesFromOrdinals',
    outputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'user', internalType: 'address', type: 'address' }],
    name: 'rolesOf',
    outputs: [{ name: 'roles', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20(config: Omit<UseContractConfig, 'abi'> = {} as any) {
  return useContract({ abi: erc20ABI, ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Read<TFunctionName extends string>(config: Omit<UseContractReadConfig<typeof erc20ABI, TFunctionName>, 'abi'> = {} as any) {
  return useContractRead({ abi: erc20ABI, ...config } as UseContractReadConfig<typeof erc20ABI, TFunctionName>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"allowance"`.
 */
export function useErc20Allowance(config: Omit<UseContractReadConfig<typeof erc20ABI, 'allowance'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: erc20ABI, functionName: 'allowance', ...config } as UseContractReadConfig<typeof erc20ABI, 'allowance'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useErc20BalanceOf(config: Omit<UseContractReadConfig<typeof erc20ABI, 'balanceOf'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: erc20ABI, functionName: 'balanceOf', ...config } as UseContractReadConfig<typeof erc20ABI, 'balanceOf'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"decimals"`.
 */
export function useErc20Decimals(config: Omit<UseContractReadConfig<typeof erc20ABI, 'decimals'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: erc20ABI, functionName: 'decimals', ...config } as UseContractReadConfig<typeof erc20ABI, 'decimals'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"name"`.
 */
export function useErc20Name(config: Omit<UseContractReadConfig<typeof erc20ABI, 'name'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: erc20ABI, functionName: 'name', ...config } as UseContractReadConfig<typeof erc20ABI, 'name'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"symbol"`.
 */
export function useErc20Symbol(config: Omit<UseContractReadConfig<typeof erc20ABI, 'symbol'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: erc20ABI, functionName: 'symbol', ...config } as UseContractReadConfig<typeof erc20ABI, 'symbol'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useErc20TotalSupply(config: Omit<UseContractReadConfig<typeof erc20ABI, 'totalSupply'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: erc20ABI, functionName: 'totalSupply', ...config } as UseContractReadConfig<typeof erc20ABI, 'totalSupply'>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Write<TMode extends WriteContractMode, TFunctionName extends string>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof erc20ABI, string>['abi'], TFunctionName>
    : UseContractWriteConfig<TMode, typeof erc20ABI, TFunctionName> & {
        abi?: never
      } = {} as any
) {
  return useContractWrite<TMode, typeof erc20ABI, TFunctionName>({ abi: erc20ABI, ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"approve"`.
 */
export function useErc20Approve<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof erc20ABI, 'approve'>['abi'], 'approve'> & { functionName?: 'approve' }
    : UseContractWriteConfig<TMode, typeof erc20ABI, 'approve'> & {
        abi?: never
        functionName?: 'approve'
      } = {} as any
) {
  return useContractWrite<TMode, typeof erc20ABI, 'approve'>({ abi: erc20ABI, functionName: 'approve', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transfer"`.
 */
export function useErc20Transfer<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof erc20ABI, 'transfer'>['abi'], 'transfer'> & { functionName?: 'transfer' }
    : UseContractWriteConfig<TMode, typeof erc20ABI, 'transfer'> & {
        abi?: never
        functionName?: 'transfer'
      } = {} as any
) {
  return useContractWrite<TMode, typeof erc20ABI, 'transfer'>({ abi: erc20ABI, functionName: 'transfer', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useErc20TransferFrom<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof erc20ABI, 'transferFrom'>['abi'], 'transferFrom'> & {
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<TMode, typeof erc20ABI, 'transferFrom'> & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any
) {
  return useContractWrite<TMode, typeof erc20ABI, 'transferFrom'>({ abi: erc20ABI, functionName: 'transferFrom', ...config } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__.
 */
export function usePrepareErc20Write<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof erc20ABI, TFunctionName>, 'abi'> = {} as any
) {
  return usePrepareContractWrite({ abi: erc20ABI, ...config } as UsePrepareContractWriteConfig<typeof erc20ABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareErc20Approve(config: Omit<UsePrepareContractWriteConfig<typeof erc20ABI, 'approve'>, 'abi' | 'functionName'> = {} as any) {
  return usePrepareContractWrite({ abi: erc20ABI, functionName: 'approve', ...config } as UsePrepareContractWriteConfig<typeof erc20ABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareErc20Transfer(
  config: Omit<UsePrepareContractWriteConfig<typeof erc20ABI, 'transfer'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: erc20ABI, functionName: 'transfer', ...config } as UsePrepareContractWriteConfig<typeof erc20ABI, 'transfer'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareErc20TransferFrom(
  config: Omit<UsePrepareContractWriteConfig<typeof erc20ABI, 'transferFrom'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: erc20ABI, functionName: 'transferFrom', ...config } as UsePrepareContractWriteConfig<
    typeof erc20ABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Event<TEventName extends string>(config: Omit<UseContractEventConfig<typeof erc20ABI, TEventName>, 'abi'> = {} as any) {
  return useContractEvent({ abi: erc20ABI, ...config } as UseContractEventConfig<typeof erc20ABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__ and `eventName` set to `"Approval"`.
 */
export function useErc20ApprovalEvent(config: Omit<UseContractEventConfig<typeof erc20ABI, 'Approval'>, 'abi' | 'eventName'> = {} as any) {
  return useContractEvent({ abi: erc20ABI, eventName: 'Approval', ...config } as UseContractEventConfig<typeof erc20ABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__ and `eventName` set to `"Transfer"`.
 */
export function useErc20TransferEvent(config: Omit<UseContractEventConfig<typeof erc20ABI, 'Transfer'>, 'abi' | 'eventName'> = {} as any) {
  return useContractEvent({ abi: erc20ABI, eventName: 'Transfer', ...config } as UseContractEventConfig<typeof erc20ABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link pixelPoolyABI}__.
 */
export function usePixelPooly(config: Omit<UseContractConfig, 'abi'> = {} as any) {
  return useContract({ abi: pixelPoolyABI, ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__.
 */
export function usePixelPoolyRead<TFunctionName extends string>(
  config: Omit<UseContractReadConfig<typeof pixelPoolyABI, TFunctionName>, 'abi'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyABI, ...config } as UseContractReadConfig<typeof pixelPoolyABI, TFunctionName>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"balanceOf"`.
 */
export function usePixelPoolyBalanceOf(config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'balanceOf'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'balanceOf', ...config } as UseContractReadConfig<typeof pixelPoolyABI, 'balanceOf'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"contractURI"`.
 */
export function usePixelPoolyContractUri(
  config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'contractURI'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'contractURI', ...config } as UseContractReadConfig<typeof pixelPoolyABI, 'contractURI'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"getApproved"`.
 */
export function usePixelPoolyGetApproved(
  config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'getApproved'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'getApproved', ...config } as UseContractReadConfig<typeof pixelPoolyABI, 'getApproved'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"getERC721Storage"`.
 */
export function usePixelPoolyGetErc721Storage(
  config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'getERC721Storage'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'getERC721Storage', ...config } as UseContractReadConfig<
    typeof pixelPoolyABI,
    'getERC721Storage'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"getLicenseName"`.
 */
export function usePixelPoolyGetLicenseName(
  config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'getLicenseName'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'getLicenseName', ...config } as UseContractReadConfig<
    typeof pixelPoolyABI,
    'getLicenseName'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"getLicenseURI"`.
 */
export function usePixelPoolyGetLicenseUri(
  config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'getLicenseURI'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'getLicenseURI', ...config } as UseContractReadConfig<
    typeof pixelPoolyABI,
    'getLicenseURI'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"hasAllRoles"`.
 */
export function usePixelPoolyHasAllRoles(
  config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'hasAllRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'hasAllRoles', ...config } as UseContractReadConfig<typeof pixelPoolyABI, 'hasAllRoles'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"hasAnyRole"`.
 */
export function usePixelPoolyHasAnyRole(config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'hasAnyRole'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'hasAnyRole', ...config } as UseContractReadConfig<typeof pixelPoolyABI, 'hasAnyRole'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"isApprovedForAll"`.
 */
export function usePixelPoolyIsApprovedForAll(
  config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'isApprovedForAll'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'isApprovedForAll', ...config } as UseContractReadConfig<
    typeof pixelPoolyABI,
    'isApprovedForAll'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"licenseVersion"`.
 */
export function usePixelPoolyLicenseVersion(
  config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'licenseVersion'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'licenseVersion', ...config } as UseContractReadConfig<
    typeof pixelPoolyABI,
    'licenseVersion'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"name"`.
 */
export function usePixelPoolyName(config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'name'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'name', ...config } as UseContractReadConfig<typeof pixelPoolyABI, 'name'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"ordinalsFromRoles"`.
 */
export function usePixelPoolyOrdinalsFromRoles(
  config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'ordinalsFromRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'ordinalsFromRoles', ...config } as UseContractReadConfig<
    typeof pixelPoolyABI,
    'ordinalsFromRoles'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"owner"`.
 */
export function usePixelPoolyOwner(config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'owner'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'owner', ...config } as UseContractReadConfig<typeof pixelPoolyABI, 'owner'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"ownerOf"`.
 */
export function usePixelPoolyOwnerOf(config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'ownerOf'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'ownerOf', ...config } as UseContractReadConfig<typeof pixelPoolyABI, 'ownerOf'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"ownershipHandoverExpiresAt"`.
 */
export function usePixelPoolyOwnershipHandoverExpiresAt(
  config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'ownershipHandoverExpiresAt'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'ownershipHandoverExpiresAt', ...config } as UseContractReadConfig<
    typeof pixelPoolyABI,
    'ownershipHandoverExpiresAt'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"ownershipHandoverValidFor"`.
 */
export function usePixelPoolyOwnershipHandoverValidFor(
  config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'ownershipHandoverValidFor'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'ownershipHandoverValidFor', ...config } as UseContractReadConfig<
    typeof pixelPoolyABI,
    'ownershipHandoverValidFor'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"preview"`.
 */
export function usePixelPoolyPreview(config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'preview'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'preview', ...config } as UseContractReadConfig<typeof pixelPoolyABI, 'preview'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"renderPreview"`.
 */
export function usePixelPoolyRenderPreview(
  config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'renderPreview'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'renderPreview', ...config } as UseContractReadConfig<
    typeof pixelPoolyABI,
    'renderPreview'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"rolesFromOrdinals"`.
 */
export function usePixelPoolyRolesFromOrdinals(
  config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'rolesFromOrdinals'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'rolesFromOrdinals', ...config } as UseContractReadConfig<
    typeof pixelPoolyABI,
    'rolesFromOrdinals'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"rolesOf"`.
 */
export function usePixelPoolyRolesOf(config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'rolesOf'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'rolesOf', ...config } as UseContractReadConfig<typeof pixelPoolyABI, 'rolesOf'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"supportsInterface"`.
 */
export function usePixelPoolySupportsInterface(
  config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'supportsInterface'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'supportsInterface', ...config } as UseContractReadConfig<
    typeof pixelPoolyABI,
    'supportsInterface'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"symbol"`.
 */
export function usePixelPoolySymbol(config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'symbol'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'symbol', ...config } as UseContractReadConfig<typeof pixelPoolyABI, 'symbol'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"tokenURI"`.
 */
export function usePixelPoolyTokenUri(config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'tokenURI'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'tokenURI', ...config } as UseContractReadConfig<typeof pixelPoolyABI, 'tokenURI'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"totalSupply"`.
 */
export function usePixelPoolyTotalSupply(
  config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'totalSupply'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'totalSupply', ...config } as UseContractReadConfig<typeof pixelPoolyABI, 'totalSupply'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"traitsPreview"`.
 */
export function usePixelPoolyTraitsPreview(
  config: Omit<UseContractReadConfig<typeof pixelPoolyABI, 'traitsPreview'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyABI, functionName: 'traitsPreview', ...config } as UseContractReadConfig<
    typeof pixelPoolyABI,
    'traitsPreview'
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__.
 */
export function usePixelPoolyWrite<TMode extends WriteContractMode, TFunctionName extends string>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyABI, string>['abi'], TFunctionName>
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, TFunctionName> & {
        abi?: never
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, TFunctionName>({ abi: pixelPoolyABI, ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"approve"`.
 */
export function usePixelPoolyApprove<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyABI, 'approve'>['abi'], 'approve'> & { functionName?: 'approve' }
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, 'approve'> & {
        abi?: never
        functionName?: 'approve'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, 'approve'>({ abi: pixelPoolyABI, functionName: 'approve', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"burn"`.
 */
export function usePixelPoolyBurn<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyABI, 'burn'>['abi'], 'burn'> & { functionName?: 'burn' }
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, 'burn'> & {
        abi?: never
        functionName?: 'burn'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, 'burn'>({ abi: pixelPoolyABI, functionName: 'burn', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"cancelOwnershipHandover"`.
 */
export function usePixelPoolyCancelOwnershipHandover<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyABI, 'cancelOwnershipHandover'>['abi'], 'cancelOwnershipHandover'> & {
        functionName?: 'cancelOwnershipHandover'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, 'cancelOwnershipHandover'> & {
        abi?: never
        functionName?: 'cancelOwnershipHandover'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, 'cancelOwnershipHandover'>({
    abi: pixelPoolyABI,
    functionName: 'cancelOwnershipHandover',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"completeOwnershipHandover"`.
 */
export function usePixelPoolyCompleteOwnershipHandover<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof pixelPoolyABI, 'completeOwnershipHandover'>['abi'],
        'completeOwnershipHandover'
      > & { functionName?: 'completeOwnershipHandover' }
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, 'completeOwnershipHandover'> & {
        abi?: never
        functionName?: 'completeOwnershipHandover'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, 'completeOwnershipHandover'>({
    abi: pixelPoolyABI,
    functionName: 'completeOwnershipHandover',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"equip"`.
 */
export function usePixelPoolyEquip<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyABI, 'equip'>['abi'], 'equip'> & { functionName?: 'equip' }
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, 'equip'> & {
        abi?: never
        functionName?: 'equip'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, 'equip'>({ abi: pixelPoolyABI, functionName: 'equip', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"equipBatch"`.
 */
export function usePixelPoolyEquipBatch<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyABI, 'equipBatch'>['abi'], 'equipBatch'> & {
        functionName?: 'equipBatch'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, 'equipBatch'> & {
        abi?: never
        functionName?: 'equipBatch'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, 'equipBatch'>({ abi: pixelPoolyABI, functionName: 'equipBatch', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"grantRoles"`.
 */
export function usePixelPoolyGrantRoles<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyABI, 'grantRoles'>['abi'], 'grantRoles'> & {
        functionName?: 'grantRoles'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, 'grantRoles'> & {
        abi?: never
        functionName?: 'grantRoles'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, 'grantRoles'>({ abi: pixelPoolyABI, functionName: 'grantRoles', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"mint"`.
 */
export function usePixelPoolyMint<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyABI, 'mint'>['abi'], 'mint'> & { functionName?: 'mint' }
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, 'mint'> & {
        abi?: never
        functionName?: 'mint'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, 'mint'>({ abi: pixelPoolyABI, functionName: 'mint', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"renounceOwnership"`.
 */
export function usePixelPoolyRenounceOwnership<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyABI, 'renounceOwnership'>['abi'], 'renounceOwnership'> & {
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, 'renounceOwnership'> & {
        abi?: never
        functionName?: 'renounceOwnership'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, 'renounceOwnership'>({
    abi: pixelPoolyABI,
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"renounceRoles"`.
 */
export function usePixelPoolyRenounceRoles<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyABI, 'renounceRoles'>['abi'], 'renounceRoles'> & {
        functionName?: 'renounceRoles'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, 'renounceRoles'> & {
        abi?: never
        functionName?: 'renounceRoles'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, 'renounceRoles'>({ abi: pixelPoolyABI, functionName: 'renounceRoles', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"requestOwnershipHandover"`.
 */
export function usePixelPoolyRequestOwnershipHandover<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof pixelPoolyABI, 'requestOwnershipHandover'>['abi'],
        'requestOwnershipHandover'
      > & { functionName?: 'requestOwnershipHandover' }
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, 'requestOwnershipHandover'> & {
        abi?: never
        functionName?: 'requestOwnershipHandover'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, 'requestOwnershipHandover'>({
    abi: pixelPoolyABI,
    functionName: 'requestOwnershipHandover',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"revokeRoles"`.
 */
export function usePixelPoolyRevokeRoles<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyABI, 'revokeRoles'>['abi'], 'revokeRoles'> & {
        functionName?: 'revokeRoles'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, 'revokeRoles'> & {
        abi?: never
        functionName?: 'revokeRoles'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, 'revokeRoles'>({ abi: pixelPoolyABI, functionName: 'revokeRoles', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function usePixelPoolySafeTransferFrom<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyABI, 'safeTransferFrom'>['abi'], 'safeTransferFrom'> & {
        functionName?: 'safeTransferFrom'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, 'safeTransferFrom'> & {
        abi?: never
        functionName?: 'safeTransferFrom'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, 'safeTransferFrom'>({ abi: pixelPoolyABI, functionName: 'safeTransferFrom', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function usePixelPoolySetApprovalForAll<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyABI, 'setApprovalForAll'>['abi'], 'setApprovalForAll'> & {
        functionName?: 'setApprovalForAll'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, 'setApprovalForAll'> & {
        abi?: never
        functionName?: 'setApprovalForAll'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, 'setApprovalForAll'>({
    abi: pixelPoolyABI,
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"setStorage"`.
 */
export function usePixelPoolySetStorage<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyABI, 'setStorage'>['abi'], 'setStorage'> & {
        functionName?: 'setStorage'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, 'setStorage'> & {
        abi?: never
        functionName?: 'setStorage'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, 'setStorage'>({ abi: pixelPoolyABI, functionName: 'setStorage', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePixelPoolyTransferFrom<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyABI, 'transferFrom'>['abi'], 'transferFrom'> & {
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, 'transferFrom'> & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, 'transferFrom'>({ abi: pixelPoolyABI, functionName: 'transferFrom', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"transferOwnership"`.
 */
export function usePixelPoolyTransferOwnership<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyABI, 'transferOwnership'>['abi'], 'transferOwnership'> & {
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyABI, 'transferOwnership'> & {
        abi?: never
        functionName?: 'transferOwnership'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyABI, 'transferOwnership'>({
    abi: pixelPoolyABI,
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__.
 */
export function usePreparePixelPoolyWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, TFunctionName>, 'abi'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, ...config } as UsePrepareContractWriteConfig<typeof pixelPoolyABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"approve"`.
 */
export function usePreparePixelPoolyApprove(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, 'approve'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, functionName: 'approve', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyABI,
    'approve'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"burn"`.
 */
export function usePreparePixelPoolyBurn(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, 'burn'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, functionName: 'burn', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyABI,
    'burn'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"cancelOwnershipHandover"`.
 */
export function usePreparePixelPoolyCancelOwnershipHandover(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, 'cancelOwnershipHandover'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, functionName: 'cancelOwnershipHandover', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyABI,
    'cancelOwnershipHandover'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"completeOwnershipHandover"`.
 */
export function usePreparePixelPoolyCompleteOwnershipHandover(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, 'completeOwnershipHandover'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, functionName: 'completeOwnershipHandover', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyABI,
    'completeOwnershipHandover'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"equip"`.
 */
export function usePreparePixelPoolyEquip(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, 'equip'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, functionName: 'equip', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyABI,
    'equip'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"equipBatch"`.
 */
export function usePreparePixelPoolyEquipBatch(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, 'equipBatch'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, functionName: 'equipBatch', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyABI,
    'equipBatch'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"grantRoles"`.
 */
export function usePreparePixelPoolyGrantRoles(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, 'grantRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, functionName: 'grantRoles', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyABI,
    'grantRoles'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"mint"`.
 */
export function usePreparePixelPoolyMint(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, 'mint'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, functionName: 'mint', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyABI,
    'mint'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"renounceOwnership"`.
 */
export function usePreparePixelPoolyRenounceOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, 'renounceOwnership'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, functionName: 'renounceOwnership', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyABI,
    'renounceOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"renounceRoles"`.
 */
export function usePreparePixelPoolyRenounceRoles(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, 'renounceRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, functionName: 'renounceRoles', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyABI,
    'renounceRoles'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"requestOwnershipHandover"`.
 */
export function usePreparePixelPoolyRequestOwnershipHandover(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, 'requestOwnershipHandover'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, functionName: 'requestOwnershipHandover', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyABI,
    'requestOwnershipHandover'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"revokeRoles"`.
 */
export function usePreparePixelPoolyRevokeRoles(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, 'revokeRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, functionName: 'revokeRoles', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyABI,
    'revokeRoles'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function usePreparePixelPoolySafeTransferFrom(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, 'safeTransferFrom'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, functionName: 'safeTransferFrom', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyABI,
    'safeTransferFrom'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function usePreparePixelPoolySetApprovalForAll(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, 'setApprovalForAll'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, functionName: 'setApprovalForAll', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyABI,
    'setApprovalForAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"setStorage"`.
 */
export function usePreparePixelPoolySetStorage(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, 'setStorage'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, functionName: 'setStorage', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyABI,
    'setStorage'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePreparePixelPoolyTransferFrom(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, 'transferFrom'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, functionName: 'transferFrom', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyABI,
    'transferFrom'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyABI}__ and `functionName` set to `"transferOwnership"`.
 */
export function usePreparePixelPoolyTransferOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyABI, 'transferOwnership'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyABI, functionName: 'transferOwnership', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyABI}__.
 */
export function usePixelPoolyEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof pixelPoolyABI, TEventName>, 'abi'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyABI, ...config } as UseContractEventConfig<typeof pixelPoolyABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyABI}__ and `eventName` set to `"Approval"`.
 */
export function usePixelPoolyApprovalEvent(config: Omit<UseContractEventConfig<typeof pixelPoolyABI, 'Approval'>, 'abi' | 'eventName'> = {} as any) {
  return useContractEvent({ abi: pixelPoolyABI, eventName: 'Approval', ...config } as UseContractEventConfig<typeof pixelPoolyABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyABI}__ and `eventName` set to `"ApprovalForAll"`.
 */
export function usePixelPoolyApprovalForAllEvent(
  config: Omit<UseContractEventConfig<typeof pixelPoolyABI, 'ApprovalForAll'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyABI, eventName: 'ApprovalForAll', ...config } as UseContractEventConfig<
    typeof pixelPoolyABI,
    'ApprovalForAll'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyABI}__ and `eventName` set to `"ERC721StorageUpdated"`.
 */
export function usePixelPoolyErc721StorageUpdatedEvent(
  config: Omit<UseContractEventConfig<typeof pixelPoolyABI, 'ERC721StorageUpdated'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyABI, eventName: 'ERC721StorageUpdated', ...config } as UseContractEventConfig<
    typeof pixelPoolyABI,
    'ERC721StorageUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyABI}__ and `eventName` set to `"OwnershipHandoverCanceled"`.
 */
export function usePixelPoolyOwnershipHandoverCanceledEvent(
  config: Omit<UseContractEventConfig<typeof pixelPoolyABI, 'OwnershipHandoverCanceled'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyABI, eventName: 'OwnershipHandoverCanceled', ...config } as UseContractEventConfig<
    typeof pixelPoolyABI,
    'OwnershipHandoverCanceled'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyABI}__ and `eventName` set to `"OwnershipHandoverRequested"`.
 */
export function usePixelPoolyOwnershipHandoverRequestedEvent(
  config: Omit<UseContractEventConfig<typeof pixelPoolyABI, 'OwnershipHandoverRequested'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyABI, eventName: 'OwnershipHandoverRequested', ...config } as UseContractEventConfig<
    typeof pixelPoolyABI,
    'OwnershipHandoverRequested'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyABI}__ and `eventName` set to `"OwnershipTransferred"`.
 */
export function usePixelPoolyOwnershipTransferredEvent(
  config: Omit<UseContractEventConfig<typeof pixelPoolyABI, 'OwnershipTransferred'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyABI, eventName: 'OwnershipTransferred', ...config } as UseContractEventConfig<
    typeof pixelPoolyABI,
    'OwnershipTransferred'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyABI}__ and `eventName` set to `"RolesUpdated"`.
 */
export function usePixelPoolyRolesUpdatedEvent(
  config: Omit<UseContractEventConfig<typeof pixelPoolyABI, 'RolesUpdated'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyABI, eventName: 'RolesUpdated', ...config } as UseContractEventConfig<
    typeof pixelPoolyABI,
    'RolesUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyABI}__ and `eventName` set to `"Transfer"`.
 */
export function usePixelPoolyTransferEvent(config: Omit<UseContractEventConfig<typeof pixelPoolyABI, 'Transfer'>, 'abi' | 'eventName'> = {} as any) {
  return useContractEvent({ abi: pixelPoolyABI, eventName: 'Transfer', ...config } as UseContractEventConfig<typeof pixelPoolyABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link pixelPoolyAssetsABI}__.
 */
export function usePixelPoolyAssets(config: Omit<UseContractConfig, 'abi'> = {} as any) {
  return useContract({ abi: pixelPoolyAssetsABI, ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyAssetsABI}__.
 */
export function usePixelPoolyAssetsRead<TFunctionName extends string>(
  config: Omit<UseContractReadConfig<typeof pixelPoolyAssetsABI, TFunctionName>, 'abi'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyAssetsABI, ...config } as UseContractReadConfig<typeof pixelPoolyAssetsABI, TFunctionName>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"getDetails"`.
 */
export function usePixelPoolyAssetsGetDetails(
  config: Omit<UseContractReadConfig<typeof pixelPoolyAssetsABI, 'getDetails'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyAssetsABI, functionName: 'getDetails', ...config } as UseContractReadConfig<
    typeof pixelPoolyAssetsABI,
    'getDetails'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"getElement"`.
 */
export function usePixelPoolyAssetsGetElement(
  config: Omit<UseContractReadConfig<typeof pixelPoolyAssetsABI, 'getElement'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyAssetsABI, functionName: 'getElement', ...config } as UseContractReadConfig<
    typeof pixelPoolyAssetsABI,
    'getElement'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"getExpiryTime"`.
 */
export function usePixelPoolyAssetsGetExpiryTime(
  config: Omit<UseContractReadConfig<typeof pixelPoolyAssetsABI, 'getExpiryTime'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyAssetsABI, functionName: 'getExpiryTime', ...config } as UseContractReadConfig<
    typeof pixelPoolyAssetsABI,
    'getExpiryTime'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"getIndexInfoFromLayer"`.
 */
export function usePixelPoolyAssetsGetIndexInfoFromLayer(
  config: Omit<UseContractReadConfig<typeof pixelPoolyAssetsABI, 'getIndexInfoFromLayer'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyAssetsABI, functionName: 'getIndexInfoFromLayer', ...config } as UseContractReadConfig<
    typeof pixelPoolyAssetsABI,
    'getIndexInfoFromLayer'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"getLayerFromIndex"`.
 */
export function usePixelPoolyAssetsGetLayerFromIndex(
  config: Omit<UseContractReadConfig<typeof pixelPoolyAssetsABI, 'getLayerFromIndex'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyAssetsABI, functionName: 'getLayerFromIndex', ...config } as UseContractReadConfig<
    typeof pixelPoolyAssetsABI,
    'getLayerFromIndex'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"getSVG"`.
 */
export function usePixelPoolyAssetsGetSvg(
  config: Omit<UseContractReadConfig<typeof pixelPoolyAssetsABI, 'getSVG'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyAssetsABI, functionName: 'getSVG', ...config } as UseContractReadConfig<
    typeof pixelPoolyAssetsABI,
    'getSVG'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"getStats"`.
 */
export function usePixelPoolyAssetsGetStats(
  config: Omit<UseContractReadConfig<typeof pixelPoolyAssetsABI, 'getStats'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyAssetsABI, functionName: 'getStats', ...config } as UseContractReadConfig<
    typeof pixelPoolyAssetsABI,
    'getStats'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"getTier"`.
 */
export function usePixelPoolyAssetsGetTier(
  config: Omit<UseContractReadConfig<typeof pixelPoolyAssetsABI, 'getTier'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyAssetsABI, functionName: 'getTier', ...config } as UseContractReadConfig<
    typeof pixelPoolyAssetsABI,
    'getTier'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"getTotalFrames"`.
 */
export function usePixelPoolyAssetsGetTotalFrames(
  config: Omit<UseContractReadConfig<typeof pixelPoolyAssetsABI, 'getTotalFrames'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyAssetsABI, functionName: 'getTotalFrames', ...config } as UseContractReadConfig<
    typeof pixelPoolyAssetsABI,
    'getTotalFrames'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"getTotalFramesPerLayer"`.
 */
export function usePixelPoolyAssetsGetTotalFramesPerLayer(
  config: Omit<UseContractReadConfig<typeof pixelPoolyAssetsABI, 'getTotalFramesPerLayer'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyAssetsABI, functionName: 'getTotalFramesPerLayer', ...config } as UseContractReadConfig<
    typeof pixelPoolyAssetsABI,
    'getTotalFramesPerLayer'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"getTotalLayers"`.
 */
export function usePixelPoolyAssetsGetTotalLayers(
  config: Omit<UseContractReadConfig<typeof pixelPoolyAssetsABI, 'getTotalLayers'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyAssetsABI, functionName: 'getTotalLayers', ...config } as UseContractReadConfig<
    typeof pixelPoolyAssetsABI,
    'getTotalLayers'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"getTotalPossibleFrames"`.
 */
export function usePixelPoolyAssetsGetTotalPossibleFrames(
  config: Omit<UseContractReadConfig<typeof pixelPoolyAssetsABI, 'getTotalPossibleFrames'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyAssetsABI, functionName: 'getTotalPossibleFrames', ...config } as UseContractReadConfig<
    typeof pixelPoolyAssetsABI,
    'getTotalPossibleFrames'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"owner"`.
 */
export function usePixelPoolyAssetsOwner(
  config: Omit<UseContractReadConfig<typeof pixelPoolyAssetsABI, 'owner'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyAssetsABI, functionName: 'owner', ...config } as UseContractReadConfig<typeof pixelPoolyAssetsABI, 'owner'>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyAssetsABI}__.
 */
export function usePixelPoolyAssetsWrite<TMode extends WriteContractMode, TFunctionName extends string>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyAssetsABI, string>['abi'], TFunctionName>
    : UseContractWriteConfig<TMode, typeof pixelPoolyAssetsABI, TFunctionName> & {
        abi?: never
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyAssetsABI, TFunctionName>({ abi: pixelPoolyAssetsABI, ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"confirmOwner"`.
 */
export function usePixelPoolyAssetsConfirmOwner<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyAssetsABI, 'confirmOwner'>['abi'], 'confirmOwner'> & {
        functionName?: 'confirmOwner'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyAssetsABI, 'confirmOwner'> & {
        abi?: never
        functionName?: 'confirmOwner'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyAssetsABI, 'confirmOwner'>({
    abi: pixelPoolyAssetsABI,
    functionName: 'confirmOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"renounceOwner"`.
 */
export function usePixelPoolyAssetsRenounceOwner<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyAssetsABI, 'renounceOwner'>['abi'], 'renounceOwner'> & {
        functionName?: 'renounceOwner'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyAssetsABI, 'renounceOwner'> & {
        abi?: never
        functionName?: 'renounceOwner'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyAssetsABI, 'renounceOwner'>({
    abi: pixelPoolyAssetsABI,
    functionName: 'renounceOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"setElement"`.
 */
export function usePixelPoolyAssetsSetElement<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyAssetsABI, 'setElement'>['abi'], 'setElement'> & {
        functionName?: 'setElement'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyAssetsABI, 'setElement'> & {
        abi?: never
        functionName?: 'setElement'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyAssetsABI, 'setElement'>({ abi: pixelPoolyAssetsABI, functionName: 'setElement', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"setSVG"`.
 */
export function usePixelPoolyAssetsSetSvg<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyAssetsABI, 'setSVG'>['abi'], 'setSVG'> & { functionName?: 'setSVG' }
    : UseContractWriteConfig<TMode, typeof pixelPoolyAssetsABI, 'setSVG'> & {
        abi?: never
        functionName?: 'setSVG'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyAssetsABI, 'setSVG'>({ abi: pixelPoolyAssetsABI, functionName: 'setSVG', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"setTraitData"`.
 */
export function usePixelPoolyAssetsSetTraitData<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyAssetsABI, 'setTraitData'>['abi'], 'setTraitData'> & {
        functionName?: 'setTraitData'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyAssetsABI, 'setTraitData'> & {
        abi?: never
        functionName?: 'setTraitData'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyAssetsABI, 'setTraitData'>({
    abi: pixelPoolyAssetsABI,
    functionName: 'setTraitData',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"transferOwnership"`.
 */
export function usePixelPoolyAssetsTransferOwnership<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyAssetsABI, 'transferOwnership'>['abi'], 'transferOwnership'> & {
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyAssetsABI, 'transferOwnership'> & {
        abi?: never
        functionName?: 'transferOwnership'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyAssetsABI, 'transferOwnership'>({
    abi: pixelPoolyAssetsABI,
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyAssetsABI}__.
 */
export function usePreparePixelPoolyAssetsWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyAssetsABI, TFunctionName>, 'abi'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyAssetsABI, ...config } as UsePrepareContractWriteConfig<typeof pixelPoolyAssetsABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"confirmOwner"`.
 */
export function usePreparePixelPoolyAssetsConfirmOwner(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyAssetsABI, 'confirmOwner'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyAssetsABI, functionName: 'confirmOwner', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyAssetsABI,
    'confirmOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"renounceOwner"`.
 */
export function usePreparePixelPoolyAssetsRenounceOwner(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyAssetsABI, 'renounceOwner'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyAssetsABI, functionName: 'renounceOwner', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyAssetsABI,
    'renounceOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"setElement"`.
 */
export function usePreparePixelPoolyAssetsSetElement(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyAssetsABI, 'setElement'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyAssetsABI, functionName: 'setElement', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyAssetsABI,
    'setElement'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"setSVG"`.
 */
export function usePreparePixelPoolyAssetsSetSvg(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyAssetsABI, 'setSVG'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyAssetsABI, functionName: 'setSVG', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyAssetsABI,
    'setSVG'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"setTraitData"`.
 */
export function usePreparePixelPoolyAssetsSetTraitData(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyAssetsABI, 'setTraitData'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyAssetsABI, functionName: 'setTraitData', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyAssetsABI,
    'setTraitData'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `functionName` set to `"transferOwnership"`.
 */
export function usePreparePixelPoolyAssetsTransferOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyAssetsABI, 'transferOwnership'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyAssetsABI, functionName: 'transferOwnership', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyAssetsABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyAssetsABI}__.
 */
export function usePixelPoolyAssetsEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof pixelPoolyAssetsABI, TEventName>, 'abi'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyAssetsABI, ...config } as UseContractEventConfig<typeof pixelPoolyAssetsABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `eventName` set to `"OwnerUpdateInitiated"`.
 */
export function usePixelPoolyAssetsOwnerUpdateInitiatedEvent(
  config: Omit<UseContractEventConfig<typeof pixelPoolyAssetsABI, 'OwnerUpdateInitiated'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyAssetsABI, eventName: 'OwnerUpdateInitiated', ...config } as UseContractEventConfig<
    typeof pixelPoolyAssetsABI,
    'OwnerUpdateInitiated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyAssetsABI}__ and `eventName` set to `"OwnershipTransferred"`.
 */
export function usePixelPoolyAssetsOwnershipTransferredEvent(
  config: Omit<UseContractEventConfig<typeof pixelPoolyAssetsABI, 'OwnershipTransferred'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyAssetsABI, eventName: 'OwnershipTransferred', ...config } as UseContractEventConfig<
    typeof pixelPoolyAssetsABI,
    'OwnershipTransferred'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link pixelPoolyRenderABI}__.
 */
export function usePixelPoolyRender(config: Omit<UseContractConfig, 'abi'> = {} as any) {
  return useContract({ abi: pixelPoolyRenderABI, ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyRenderABI}__.
 */
export function usePixelPoolyRenderRead<TFunctionName extends string>(
  config: Omit<UseContractReadConfig<typeof pixelPoolyRenderABI, TFunctionName>, 'abi'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyRenderABI, ...config } as UseContractReadConfig<typeof pixelPoolyRenderABI, TFunctionName>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyRenderABI}__ and `functionName` set to `"bytes32ToString"`.
 */
export function usePixelPoolyRenderBytes32ToString(
  config: Omit<UseContractReadConfig<typeof pixelPoolyRenderABI, 'bytes32ToString'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyRenderABI, functionName: 'bytes32ToString', ...config } as UseContractReadConfig<
    typeof pixelPoolyRenderABI,
    'bytes32ToString'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyRenderABI}__ and `functionName` set to `"owner"`.
 */
export function usePixelPoolyRenderOwner(
  config: Omit<UseContractReadConfig<typeof pixelPoolyRenderABI, 'owner'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyRenderABI, functionName: 'owner', ...config } as UseContractReadConfig<typeof pixelPoolyRenderABI, 'owner'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyRenderABI}__ and `functionName` set to `"render"`.
 */
export function usePixelPoolyRenderRender(
  config: Omit<UseContractReadConfig<typeof pixelPoolyRenderABI, 'render'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyRenderABI, functionName: 'render', ...config } as UseContractReadConfig<
    typeof pixelPoolyRenderABI,
    'render'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyRenderABI}__ and `functionName` set to `"svgLibrary"`.
 */
export function usePixelPoolyRenderSvgLibrary(
  config: Omit<UseContractReadConfig<typeof pixelPoolyRenderABI, 'svgLibrary'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyRenderABI, functionName: 'svgLibrary', ...config } as UseContractReadConfig<
    typeof pixelPoolyRenderABI,
    'svgLibrary'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyRenderABI}__ and `functionName` set to `"svgRegistry"`.
 */
export function usePixelPoolyRenderSvgRegistry(
  config: Omit<UseContractReadConfig<typeof pixelPoolyRenderABI, 'svgRegistry'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyRenderABI, functionName: 'svgRegistry', ...config } as UseContractReadConfig<
    typeof pixelPoolyRenderABI,
    'svgRegistry'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyRenderABI}__ and `functionName` set to `"toByte"`.
 */
export function usePixelPoolyRenderToByte(
  config: Omit<UseContractReadConfig<typeof pixelPoolyRenderABI, 'toByte'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyRenderABI, functionName: 'toByte', ...config } as UseContractReadConfig<
    typeof pixelPoolyRenderABI,
    'toByte'
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyRenderABI}__.
 */
export function usePixelPoolyRenderWrite<TMode extends WriteContractMode, TFunctionName extends string>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyRenderABI, string>['abi'], TFunctionName>
    : UseContractWriteConfig<TMode, typeof pixelPoolyRenderABI, TFunctionName> & {
        abi?: never
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyRenderABI, TFunctionName>({ abi: pixelPoolyRenderABI, ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyRenderABI}__ and `functionName` set to `"transferOwnership"`.
 */
export function usePixelPoolyRenderTransferOwnership<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyRenderABI, 'transferOwnership'>['abi'], 'transferOwnership'> & {
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyRenderABI, 'transferOwnership'> & {
        abi?: never
        functionName?: 'transferOwnership'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyRenderABI, 'transferOwnership'>({
    abi: pixelPoolyRenderABI,
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyRenderABI}__.
 */
export function usePreparePixelPoolyRenderWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyRenderABI, TFunctionName>, 'abi'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyRenderABI, ...config } as UsePrepareContractWriteConfig<typeof pixelPoolyRenderABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyRenderABI}__ and `functionName` set to `"transferOwnership"`.
 */
export function usePreparePixelPoolyRenderTransferOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyRenderABI, 'transferOwnership'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyRenderABI, functionName: 'transferOwnership', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyRenderABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyRenderABI}__.
 */
export function usePixelPoolyRenderEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof pixelPoolyRenderABI, TEventName>, 'abi'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyRenderABI, ...config } as UseContractEventConfig<typeof pixelPoolyRenderABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyRenderABI}__ and `eventName` set to `"OwnershipTransferred"`.
 */
export function usePixelPoolyRenderOwnershipTransferredEvent(
  config: Omit<UseContractEventConfig<typeof pixelPoolyRenderABI, 'OwnershipTransferred'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyRenderABI, eventName: 'OwnershipTransferred', ...config } as UseContractEventConfig<
    typeof pixelPoolyRenderABI,
    'OwnershipTransferred'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link pixelPoolyStorageABI}__.
 */
export function usePixelPoolyStorage(config: Omit<UseContractConfig, 'abi'> = {} as any) {
  return useContract({ abi: pixelPoolyStorageABI, ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__.
 */
export function usePixelPoolyStorageRead<TFunctionName extends string>(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, TFunctionName>, 'abi'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, ...config } as UseContractReadConfig<typeof pixelPoolyStorageABI, TFunctionName>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"constructContractURI"`.
 */
export function usePixelPoolyStorageConstructContractUri(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'constructContractURI'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'constructContractURI', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'constructContractURI'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"constructTokenURI"`.
 */
export function usePixelPoolyStorageConstructTokenUri(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'constructTokenURI'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'constructTokenURI', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'constructTokenURI'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"erc721ImageSignalRenderInstance"`.
 */
export function usePixelPoolyStorageErc721ImageSignalRenderInstance(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'erc721ImageSignalRenderInstance'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'erc721ImageSignalRenderInstance', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'erc721ImageSignalRenderInstance'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"erc721ImageSignalTraitsInstance"`.
 */
export function usePixelPoolyStorageErc721ImageSignalTraitsInstance(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'erc721ImageSignalTraitsInstance'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'erc721ImageSignalTraitsInstance', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'erc721ImageSignalTraitsInstance'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"erc721KInstance"`.
 */
export function usePixelPoolyStorageErc721KInstance(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'erc721KInstance'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'erc721KInstance', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'erc721KInstance'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"formatTraitsBytes"`.
 */
export function usePixelPoolyStorageFormatTraitsBytes(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'formatTraitsBytes'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'formatTraitsBytes', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'formatTraitsBytes'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"formatTraitsBytesFromCharacter"`.
 */
export function usePixelPoolyStorageFormatTraitsBytesFromCharacter(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'formatTraitsBytesFromCharacter'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'formatTraitsBytesFromCharacter', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'formatTraitsBytesFromCharacter'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"getCharacter"`.
 */
export function usePixelPoolyStorageGetCharacter(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'getCharacter'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'getCharacter', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'getCharacter'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"getContractDescription"`.
 */
export function usePixelPoolyStorageGetContractDescription(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'getContractDescription'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'getContractDescription', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'getContractDescription'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"getERC721KRender"`.
 */
export function usePixelPoolyStorageGetErc721KRender(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'getERC721KRender'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'getERC721KRender', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'getERC721KRender'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"getERC72KTraits"`.
 */
export function usePixelPoolyStorageGetErc72KTraits(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'getERC72KTraits'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'getERC72KTraits', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'getERC72KTraits'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"getImageBytes"`.
 */
export function usePixelPoolyStorageGetImageBytes(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'getImageBytes'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'getImageBytes', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'getImageBytes'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"getPreview"`.
 */
export function usePixelPoolyStorageGetPreview(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'getPreview'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'getPreview', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'getPreview'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"getStore"`.
 */
export function usePixelPoolyStorageGetStore(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'getStore'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'getStore', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'getStore'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"getTraitsBytes"`.
 */
export function usePixelPoolyStorageGetTraitsBytes(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'getTraitsBytes'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'getTraitsBytes', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'getTraitsBytes'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"getUnlockedTraits"`.
 */
export function usePixelPoolyStorageGetUnlockedTraits(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'getUnlockedTraits'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'getUnlockedTraits', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'getUnlockedTraits'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"hasAllRoles"`.
 */
export function usePixelPoolyStorageHasAllRoles(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'hasAllRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'hasAllRoles', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'hasAllRoles'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"hasAnyRole"`.
 */
export function usePixelPoolyStorageHasAnyRole(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'hasAnyRole'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'hasAnyRole', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'hasAnyRole'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"isFrameActive"`.
 */
export function usePixelPoolyStorageIsFrameActive(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'isFrameActive'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'isFrameActive', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'isFrameActive'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"ordinalsFromRoles"`.
 */
export function usePixelPoolyStorageOrdinalsFromRoles(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'ordinalsFromRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'ordinalsFromRoles', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'ordinalsFromRoles'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"owner"`.
 */
export function usePixelPoolyStorageOwner(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'owner'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'owner', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'owner'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"ownershipHandoverExpiresAt"`.
 */
export function usePixelPoolyStorageOwnershipHandoverExpiresAt(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'ownershipHandoverExpiresAt'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'ownershipHandoverExpiresAt', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'ownershipHandoverExpiresAt'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"ownershipHandoverValidFor"`.
 */
export function usePixelPoolyStorageOwnershipHandoverValidFor(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'ownershipHandoverValidFor'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'ownershipHandoverValidFor', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'ownershipHandoverValidFor'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"pixelPoolyAssetsInstance"`.
 */
export function usePixelPoolyStoragePixelPoolyAssetsInstance(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'pixelPoolyAssetsInstance'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'pixelPoolyAssetsInstance', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'pixelPoolyAssetsInstance'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"pixelStoreInstance"`.
 */
export function usePixelPoolyStoragePixelStoreInstance(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'pixelStoreInstance'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'pixelStoreInstance', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'pixelStoreInstance'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"render"`.
 */
export function usePixelPoolyStorageRender(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'render'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'render', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'render'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"rolesFromOrdinals"`.
 */
export function usePixelPoolyStorageRolesFromOrdinals(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'rolesFromOrdinals'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'rolesFromOrdinals', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'rolesFromOrdinals'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"rolesOf"`.
 */
export function usePixelPoolyStorageRolesOf(
  config: Omit<UseContractReadConfig<typeof pixelPoolyStorageABI, 'rolesOf'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyStorageABI, functionName: 'rolesOf', ...config } as UseContractReadConfig<
    typeof pixelPoolyStorageABI,
    'rolesOf'
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__.
 */
export function usePixelPoolyStorageWrite<TMode extends WriteContractMode, TFunctionName extends string>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyStorageABI, string>['abi'], TFunctionName>
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, TFunctionName> & {
        abi?: never
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, TFunctionName>({ abi: pixelPoolyStorageABI, ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"cancelOwnershipHandover"`.
 */
export function usePixelPoolyStorageCancelOwnershipHandover<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'cancelOwnershipHandover'>['abi'],
        'cancelOwnershipHandover'
      > & { functionName?: 'cancelOwnershipHandover' }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'cancelOwnershipHandover'> & {
        abi?: never
        functionName?: 'cancelOwnershipHandover'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'cancelOwnershipHandover'>({
    abi: pixelPoolyStorageABI,
    functionName: 'cancelOwnershipHandover',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"completeOwnershipHandover"`.
 */
export function usePixelPoolyStorageCompleteOwnershipHandover<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'completeOwnershipHandover'>['abi'],
        'completeOwnershipHandover'
      > & { functionName?: 'completeOwnershipHandover' }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'completeOwnershipHandover'> & {
        abi?: never
        functionName?: 'completeOwnershipHandover'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'completeOwnershipHandover'>({
    abi: pixelPoolyStorageABI,
    functionName: 'completeOwnershipHandover',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"disableElement"`.
 */
export function usePixelPoolyStorageDisableElement<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'disableElement'>['abi'], 'disableElement'> & {
        functionName?: 'disableElement'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'disableElement'> & {
        abi?: never
        functionName?: 'disableElement'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'disableElement'>({
    abi: pixelPoolyStorageABI,
    functionName: 'disableElement',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"enableElement"`.
 */
export function usePixelPoolyStorageEnableElement<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'enableElement'>['abi'], 'enableElement'> & {
        functionName?: 'enableElement'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'enableElement'> & {
        abi?: never
        functionName?: 'enableElement'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'enableElement'>({
    abi: pixelPoolyStorageABI,
    functionName: 'enableElement',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"grantRoles"`.
 */
export function usePixelPoolyStorageGrantRoles<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'grantRoles'>['abi'], 'grantRoles'> & {
        functionName?: 'grantRoles'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'grantRoles'> & {
        abi?: never
        functionName?: 'grantRoles'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'grantRoles'>({
    abi: pixelPoolyStorageABI,
    functionName: 'grantRoles',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"renounceOwnership"`.
 */
export function usePixelPoolyStorageRenounceOwnership<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'renounceOwnership'>['abi'], 'renounceOwnership'> & {
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'renounceOwnership'> & {
        abi?: never
        functionName?: 'renounceOwnership'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'renounceOwnership'>({
    abi: pixelPoolyStorageABI,
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"renounceRoles"`.
 */
export function usePixelPoolyStorageRenounceRoles<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'renounceRoles'>['abi'], 'renounceRoles'> & {
        functionName?: 'renounceRoles'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'renounceRoles'> & {
        abi?: never
        functionName?: 'renounceRoles'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'renounceRoles'>({
    abi: pixelPoolyStorageABI,
    functionName: 'renounceRoles',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"requestOwnershipHandover"`.
 */
export function usePixelPoolyStorageRequestOwnershipHandover<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'requestOwnershipHandover'>['abi'],
        'requestOwnershipHandover'
      > & { functionName?: 'requestOwnershipHandover' }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'requestOwnershipHandover'> & {
        abi?: never
        functionName?: 'requestOwnershipHandover'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'requestOwnershipHandover'>({
    abi: pixelPoolyStorageABI,
    functionName: 'requestOwnershipHandover',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"revokeRoles"`.
 */
export function usePixelPoolyStorageRevokeRoles<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'revokeRoles'>['abi'], 'revokeRoles'> & {
        functionName?: 'revokeRoles'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'revokeRoles'> & {
        abi?: never
        functionName?: 'revokeRoles'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'revokeRoles'>({
    abi: pixelPoolyStorageABI,
    functionName: 'revokeRoles',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setContractURI"`.
 */
export function usePixelPoolyStorageSetContractUri<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'setContractURI'>['abi'], 'setContractURI'> & {
        functionName?: 'setContractURI'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'setContractURI'> & {
        abi?: never
        functionName?: 'setContractURI'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'setContractURI'>({
    abi: pixelPoolyStorageABI,
    functionName: 'setContractURI',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setERC721KInstance"`.
 */
export function usePixelPoolyStorageSetErc721KInstance<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'setERC721KInstance'>['abi'], 'setERC721KInstance'> & {
        functionName?: 'setERC721KInstance'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'setERC721KInstance'> & {
        abi?: never
        functionName?: 'setERC721KInstance'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'setERC721KInstance'>({
    abi: pixelPoolyStorageABI,
    functionName: 'setERC721KInstance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setLayerFrameByController"`.
 */
export function usePixelPoolyStorageSetLayerFrameByController<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'setLayerFrameByController'>['abi'],
        'setLayerFrameByController'
      > & { functionName?: 'setLayerFrameByController' }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'setLayerFrameByController'> & {
        abi?: never
        functionName?: 'setLayerFrameByController'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'setLayerFrameByController'>({
    abi: pixelPoolyStorageABI,
    functionName: 'setLayerFrameByController',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setLayerFrameByERC721K"`.
 */
export function usePixelPoolyStorageSetLayerFrameByErc721K<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'setLayerFrameByERC721K'>['abi'],
        'setLayerFrameByERC721K'
      > & { functionName?: 'setLayerFrameByERC721K' }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'setLayerFrameByERC721K'> & {
        abi?: never
        functionName?: 'setLayerFrameByERC721K'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'setLayerFrameByERC721K'>({
    abi: pixelPoolyStorageABI,
    functionName: 'setLayerFrameByERC721K',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setLayerFrameByOwner"`.
 */
export function usePixelPoolyStorageSetLayerFrameByOwner<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'setLayerFrameByOwner'>['abi'],
        'setLayerFrameByOwner'
      > & { functionName?: 'setLayerFrameByOwner' }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'setLayerFrameByOwner'> & {
        abi?: never
        functionName?: 'setLayerFrameByOwner'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'setLayerFrameByOwner'>({
    abi: pixelPoolyStorageABI,
    functionName: 'setLayerFrameByOwner',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setPixelPoolyAssetsInstance"`.
 */
export function usePixelPoolyStorageSetPixelPoolyAssetsInstance<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'setPixelPoolyAssetsInstance'>['abi'],
        'setPixelPoolyAssetsInstance'
      > & { functionName?: 'setPixelPoolyAssetsInstance' }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'setPixelPoolyAssetsInstance'> & {
        abi?: never
        functionName?: 'setPixelPoolyAssetsInstance'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'setPixelPoolyAssetsInstance'>({
    abi: pixelPoolyStorageABI,
    functionName: 'setPixelPoolyAssetsInstance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setPixelStoreInstance"`.
 */
export function usePixelPoolyStorageSetPixelStoreInstance<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'setPixelStoreInstance'>['abi'],
        'setPixelStoreInstance'
      > & { functionName?: 'setPixelStoreInstance' }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'setPixelStoreInstance'> & {
        abi?: never
        functionName?: 'setPixelStoreInstance'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'setPixelStoreInstance'>({
    abi: pixelPoolyStorageABI,
    functionName: 'setPixelStoreInstance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setSignal"`.
 */
export function usePixelPoolyStorageSetSignal<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'setSignal'>['abi'], 'setSignal'> & {
        functionName?: 'setSignal'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'setSignal'> & {
        abi?: never
        functionName?: 'setSignal'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'setSignal'>({ abi: pixelPoolyStorageABI, functionName: 'setSignal', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setSvgRender"`.
 */
export function usePixelPoolyStorageSetSvgRender<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'setSvgRender'>['abi'], 'setSvgRender'> & {
        functionName?: 'setSvgRender'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'setSvgRender'> & {
        abi?: never
        functionName?: 'setSvgRender'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'setSvgRender'>({
    abi: pixelPoolyStorageABI,
    functionName: 'setSvgRender',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setTraitsFetch"`.
 */
export function usePixelPoolyStorageSetTraitsFetch<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'setTraitsFetch'>['abi'], 'setTraitsFetch'> & {
        functionName?: 'setTraitsFetch'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'setTraitsFetch'> & {
        abi?: never
        functionName?: 'setTraitsFetch'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'setTraitsFetch'>({
    abi: pixelPoolyStorageABI,
    functionName: 'setTraitsFetch',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"transferOwnership"`.
 */
export function usePixelPoolyStorageTransferOwnership<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelPoolyStorageABI, 'transferOwnership'>['abi'], 'transferOwnership'> & {
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<TMode, typeof pixelPoolyStorageABI, 'transferOwnership'> & {
        abi?: never
        functionName?: 'transferOwnership'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelPoolyStorageABI, 'transferOwnership'>({
    abi: pixelPoolyStorageABI,
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__.
 */
export function usePreparePixelPoolyStorageWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, TFunctionName>, 'abi'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    TFunctionName
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"cancelOwnershipHandover"`.
 */
export function usePreparePixelPoolyStorageCancelOwnershipHandover(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'cancelOwnershipHandover'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'cancelOwnershipHandover', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'cancelOwnershipHandover'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"completeOwnershipHandover"`.
 */
export function usePreparePixelPoolyStorageCompleteOwnershipHandover(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'completeOwnershipHandover'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'completeOwnershipHandover', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'completeOwnershipHandover'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"disableElement"`.
 */
export function usePreparePixelPoolyStorageDisableElement(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'disableElement'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'disableElement', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'disableElement'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"enableElement"`.
 */
export function usePreparePixelPoolyStorageEnableElement(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'enableElement'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'enableElement', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'enableElement'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"grantRoles"`.
 */
export function usePreparePixelPoolyStorageGrantRoles(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'grantRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'grantRoles', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'grantRoles'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"renounceOwnership"`.
 */
export function usePreparePixelPoolyStorageRenounceOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'renounceOwnership'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'renounceOwnership', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'renounceOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"renounceRoles"`.
 */
export function usePreparePixelPoolyStorageRenounceRoles(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'renounceRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'renounceRoles', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'renounceRoles'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"requestOwnershipHandover"`.
 */
export function usePreparePixelPoolyStorageRequestOwnershipHandover(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'requestOwnershipHandover'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'requestOwnershipHandover', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'requestOwnershipHandover'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"revokeRoles"`.
 */
export function usePreparePixelPoolyStorageRevokeRoles(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'revokeRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'revokeRoles', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'revokeRoles'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setContractURI"`.
 */
export function usePreparePixelPoolyStorageSetContractUri(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'setContractURI'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'setContractURI', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'setContractURI'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setERC721KInstance"`.
 */
export function usePreparePixelPoolyStorageSetErc721KInstance(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'setERC721KInstance'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'setERC721KInstance', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'setERC721KInstance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setLayerFrameByController"`.
 */
export function usePreparePixelPoolyStorageSetLayerFrameByController(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'setLayerFrameByController'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'setLayerFrameByController', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'setLayerFrameByController'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setLayerFrameByERC721K"`.
 */
export function usePreparePixelPoolyStorageSetLayerFrameByErc721K(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'setLayerFrameByERC721K'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'setLayerFrameByERC721K', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'setLayerFrameByERC721K'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setLayerFrameByOwner"`.
 */
export function usePreparePixelPoolyStorageSetLayerFrameByOwner(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'setLayerFrameByOwner'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'setLayerFrameByOwner', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'setLayerFrameByOwner'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setPixelPoolyAssetsInstance"`.
 */
export function usePreparePixelPoolyStorageSetPixelPoolyAssetsInstance(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'setPixelPoolyAssetsInstance'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({
    abi: pixelPoolyStorageABI,
    functionName: 'setPixelPoolyAssetsInstance',
    ...config,
  } as UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'setPixelPoolyAssetsInstance'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setPixelStoreInstance"`.
 */
export function usePreparePixelPoolyStorageSetPixelStoreInstance(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'setPixelStoreInstance'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'setPixelStoreInstance', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'setPixelStoreInstance'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setSignal"`.
 */
export function usePreparePixelPoolyStorageSetSignal(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'setSignal'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'setSignal', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'setSignal'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setSvgRender"`.
 */
export function usePreparePixelPoolyStorageSetSvgRender(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'setSvgRender'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'setSvgRender', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'setSvgRender'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"setTraitsFetch"`.
 */
export function usePreparePixelPoolyStorageSetTraitsFetch(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'setTraitsFetch'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'setTraitsFetch', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'setTraitsFetch'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `functionName` set to `"transferOwnership"`.
 */
export function usePreparePixelPoolyStorageTransferOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelPoolyStorageABI, 'transferOwnership'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelPoolyStorageABI, functionName: 'transferOwnership', ...config } as UsePrepareContractWriteConfig<
    typeof pixelPoolyStorageABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyStorageABI}__.
 */
export function usePixelPoolyStorageEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof pixelPoolyStorageABI, TEventName>, 'abi'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyStorageABI, ...config } as UseContractEventConfig<typeof pixelPoolyStorageABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `eventName` set to `"ContractURIUpdated"`.
 */
export function usePixelPoolyStorageContractUriUpdatedEvent(
  config: Omit<UseContractEventConfig<typeof pixelPoolyStorageABI, 'ContractURIUpdated'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyStorageABI, eventName: 'ContractURIUpdated', ...config } as UseContractEventConfig<
    typeof pixelPoolyStorageABI,
    'ContractURIUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `eventName` set to `"OwnershipHandoverCanceled"`.
 */
export function usePixelPoolyStorageOwnershipHandoverCanceledEvent(
  config: Omit<UseContractEventConfig<typeof pixelPoolyStorageABI, 'OwnershipHandoverCanceled'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyStorageABI, eventName: 'OwnershipHandoverCanceled', ...config } as UseContractEventConfig<
    typeof pixelPoolyStorageABI,
    'OwnershipHandoverCanceled'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `eventName` set to `"OwnershipHandoverRequested"`.
 */
export function usePixelPoolyStorageOwnershipHandoverRequestedEvent(
  config: Omit<UseContractEventConfig<typeof pixelPoolyStorageABI, 'OwnershipHandoverRequested'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyStorageABI, eventName: 'OwnershipHandoverRequested', ...config } as UseContractEventConfig<
    typeof pixelPoolyStorageABI,
    'OwnershipHandoverRequested'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `eventName` set to `"OwnershipTransferred"`.
 */
export function usePixelPoolyStorageOwnershipTransferredEvent(
  config: Omit<UseContractEventConfig<typeof pixelPoolyStorageABI, 'OwnershipTransferred'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyStorageABI, eventName: 'OwnershipTransferred', ...config } as UseContractEventConfig<
    typeof pixelPoolyStorageABI,
    'OwnershipTransferred'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `eventName` set to `"RolesUpdated"`.
 */
export function usePixelPoolyStorageRolesUpdatedEvent(
  config: Omit<UseContractEventConfig<typeof pixelPoolyStorageABI, 'RolesUpdated'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyStorageABI, eventName: 'RolesUpdated', ...config } as UseContractEventConfig<
    typeof pixelPoolyStorageABI,
    'RolesUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `eventName` set to `"SvgRenderUpdated"`.
 */
export function usePixelPoolyStorageSvgRenderUpdatedEvent(
  config: Omit<UseContractEventConfig<typeof pixelPoolyStorageABI, 'SvgRenderUpdated'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyStorageABI, eventName: 'SvgRenderUpdated', ...config } as UseContractEventConfig<
    typeof pixelPoolyStorageABI,
    'SvgRenderUpdated'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelPoolyStorageABI}__ and `eventName` set to `"TraitsFetchUpdated"`.
 */
export function usePixelPoolyStorageTraitsFetchUpdatedEvent(
  config: Omit<UseContractEventConfig<typeof pixelPoolyStorageABI, 'TraitsFetchUpdated'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelPoolyStorageABI, eventName: 'TraitsFetchUpdated', ...config } as UseContractEventConfig<
    typeof pixelPoolyStorageABI,
    'TraitsFetchUpdated'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link pixelPoolyTraitsABI}__.
 */
export function usePixelPoolyTraits(config: Omit<UseContractConfig, 'abi'> = {} as any) {
  return useContract({ abi: pixelPoolyTraitsABI, ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyTraitsABI}__.
 */
export function usePixelPoolyTraitsRead<TFunctionName extends string>(
  config: Omit<UseContractReadConfig<typeof pixelPoolyTraitsABI, TFunctionName>, 'abi'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyTraitsABI, ...config } as UseContractReadConfig<typeof pixelPoolyTraitsABI, TFunctionName>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelPoolyTraitsABI}__ and `functionName` set to `"fetch"`.
 */
export function usePixelPoolyTraitsFetch(
  config: Omit<UseContractReadConfig<typeof pixelPoolyTraitsABI, 'fetch'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelPoolyTraitsABI, functionName: 'fetch', ...config } as UseContractReadConfig<typeof pixelPoolyTraitsABI, 'fetch'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link pixelStoreABI}__.
 */
export function usePixelStore(config: Omit<UseContractConfig, 'abi'> = {} as any) {
  return useContract({ abi: pixelStoreABI, ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelStoreABI}__.
 */
export function usePixelStoreRead<TFunctionName extends string>(
  config: Omit<UseContractReadConfig<typeof pixelStoreABI, TFunctionName>, 'abi'> = {} as any
) {
  return useContractRead({ abi: pixelStoreABI, ...config } as UseContractReadConfig<typeof pixelStoreABI, TFunctionName>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"erc721KStorage"`.
 */
export function usePixelStoreErc721KStorage(
  config: Omit<UseContractReadConfig<typeof pixelStoreABI, 'erc721KStorage'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelStoreABI, functionName: 'erc721KStorage', ...config } as UseContractReadConfig<
    typeof pixelStoreABI,
    'erc721KStorage'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"getFramePrice"`.
 */
export function usePixelStoreGetFramePrice(
  config: Omit<UseContractReadConfig<typeof pixelStoreABI, 'getFramePrice'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelStoreABI, functionName: 'getFramePrice', ...config } as UseContractReadConfig<
    typeof pixelStoreABI,
    'getFramePrice'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"getFramePrices"`.
 */
export function usePixelStoreGetFramePrices(
  config: Omit<UseContractReadConfig<typeof pixelStoreABI, 'getFramePrices'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelStoreABI, functionName: 'getFramePrices', ...config } as UseContractReadConfig<
    typeof pixelStoreABI,
    'getFramePrices'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"getTierPrice"`.
 */
export function usePixelStoreGetTierPrice(
  config: Omit<UseContractReadConfig<typeof pixelStoreABI, 'getTierPrice'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelStoreABI, functionName: 'getTierPrice', ...config } as UseContractReadConfig<
    typeof pixelStoreABI,
    'getTierPrice'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"getTierPrices"`.
 */
export function usePixelStoreGetTierPrices(
  config: Omit<UseContractReadConfig<typeof pixelStoreABI, 'getTierPrices'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelStoreABI, functionName: 'getTierPrices', ...config } as UseContractReadConfig<
    typeof pixelStoreABI,
    'getTierPrices'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"hasAllRoles"`.
 */
export function usePixelStoreHasAllRoles(
  config: Omit<UseContractReadConfig<typeof pixelStoreABI, 'hasAllRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelStoreABI, functionName: 'hasAllRoles', ...config } as UseContractReadConfig<typeof pixelStoreABI, 'hasAllRoles'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"hasAnyRole"`.
 */
export function usePixelStoreHasAnyRole(config: Omit<UseContractReadConfig<typeof pixelStoreABI, 'hasAnyRole'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: pixelStoreABI, functionName: 'hasAnyRole', ...config } as UseContractReadConfig<typeof pixelStoreABI, 'hasAnyRole'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"isEnabled"`.
 */
export function usePixelStoreIsEnabled(config: Omit<UseContractReadConfig<typeof pixelStoreABI, 'isEnabled'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: pixelStoreABI, functionName: 'isEnabled', ...config } as UseContractReadConfig<typeof pixelStoreABI, 'isEnabled'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"ordinalsFromRoles"`.
 */
export function usePixelStoreOrdinalsFromRoles(
  config: Omit<UseContractReadConfig<typeof pixelStoreABI, 'ordinalsFromRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelStoreABI, functionName: 'ordinalsFromRoles', ...config } as UseContractReadConfig<
    typeof pixelStoreABI,
    'ordinalsFromRoles'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"owner"`.
 */
export function usePixelStoreOwner(config: Omit<UseContractReadConfig<typeof pixelStoreABI, 'owner'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: pixelStoreABI, functionName: 'owner', ...config } as UseContractReadConfig<typeof pixelStoreABI, 'owner'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"ownershipHandoverExpiresAt"`.
 */
export function usePixelStoreOwnershipHandoverExpiresAt(
  config: Omit<UseContractReadConfig<typeof pixelStoreABI, 'ownershipHandoverExpiresAt'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelStoreABI, functionName: 'ownershipHandoverExpiresAt', ...config } as UseContractReadConfig<
    typeof pixelStoreABI,
    'ownershipHandoverExpiresAt'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"ownershipHandoverValidFor"`.
 */
export function usePixelStoreOwnershipHandoverValidFor(
  config: Omit<UseContractReadConfig<typeof pixelStoreABI, 'ownershipHandoverValidFor'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelStoreABI, functionName: 'ownershipHandoverValidFor', ...config } as UseContractReadConfig<
    typeof pixelStoreABI,
    'ownershipHandoverValidFor'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"pixelAssets"`.
 */
export function usePixelStorePixelAssets(
  config: Omit<UseContractReadConfig<typeof pixelStoreABI, 'pixelAssets'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelStoreABI, functionName: 'pixelAssets', ...config } as UseContractReadConfig<typeof pixelStoreABI, 'pixelAssets'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"rolesFromOrdinals"`.
 */
export function usePixelStoreRolesFromOrdinals(
  config: Omit<UseContractReadConfig<typeof pixelStoreABI, 'rolesFromOrdinals'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelStoreABI, functionName: 'rolesFromOrdinals', ...config } as UseContractReadConfig<
    typeof pixelStoreABI,
    'rolesFromOrdinals'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"rolesOf"`.
 */
export function usePixelStoreRolesOf(config: Omit<UseContractReadConfig<typeof pixelStoreABI, 'rolesOf'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: pixelStoreABI, functionName: 'rolesOf', ...config } as UseContractReadConfig<typeof pixelStoreABI, 'rolesOf'>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelStoreABI}__.
 */
export function usePixelStoreWrite<TMode extends WriteContractMode, TFunctionName extends string>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelStoreABI, string>['abi'], TFunctionName>
    : UseContractWriteConfig<TMode, typeof pixelStoreABI, TFunctionName> & {
        abi?: never
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelStoreABI, TFunctionName>({ abi: pixelStoreABI, ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"cancelOwnershipHandover"`.
 */
export function usePixelStoreCancelOwnershipHandover<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelStoreABI, 'cancelOwnershipHandover'>['abi'], 'cancelOwnershipHandover'> & {
        functionName?: 'cancelOwnershipHandover'
      }
    : UseContractWriteConfig<TMode, typeof pixelStoreABI, 'cancelOwnershipHandover'> & {
        abi?: never
        functionName?: 'cancelOwnershipHandover'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelStoreABI, 'cancelOwnershipHandover'>({
    abi: pixelStoreABI,
    functionName: 'cancelOwnershipHandover',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"completeOwnershipHandover"`.
 */
export function usePixelStoreCompleteOwnershipHandover<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof pixelStoreABI, 'completeOwnershipHandover'>['abi'],
        'completeOwnershipHandover'
      > & { functionName?: 'completeOwnershipHandover' }
    : UseContractWriteConfig<TMode, typeof pixelStoreABI, 'completeOwnershipHandover'> & {
        abi?: never
        functionName?: 'completeOwnershipHandover'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelStoreABI, 'completeOwnershipHandover'>({
    abi: pixelStoreABI,
    functionName: 'completeOwnershipHandover',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"grantRoles"`.
 */
export function usePixelStoreGrantRoles<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelStoreABI, 'grantRoles'>['abi'], 'grantRoles'> & {
        functionName?: 'grantRoles'
      }
    : UseContractWriteConfig<TMode, typeof pixelStoreABI, 'grantRoles'> & {
        abi?: never
        functionName?: 'grantRoles'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelStoreABI, 'grantRoles'>({ abi: pixelStoreABI, functionName: 'grantRoles', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"release"`.
 */
export function usePixelStoreRelease<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelStoreABI, 'release'>['abi'], 'release'> & { functionName?: 'release' }
    : UseContractWriteConfig<TMode, typeof pixelStoreABI, 'release'> & {
        abi?: never
        functionName?: 'release'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelStoreABI, 'release'>({ abi: pixelStoreABI, functionName: 'release', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"renounceOwnership"`.
 */
export function usePixelStoreRenounceOwnership<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelStoreABI, 'renounceOwnership'>['abi'], 'renounceOwnership'> & {
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<TMode, typeof pixelStoreABI, 'renounceOwnership'> & {
        abi?: never
        functionName?: 'renounceOwnership'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelStoreABI, 'renounceOwnership'>({
    abi: pixelStoreABI,
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"renounceRoles"`.
 */
export function usePixelStoreRenounceRoles<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelStoreABI, 'renounceRoles'>['abi'], 'renounceRoles'> & {
        functionName?: 'renounceRoles'
      }
    : UseContractWriteConfig<TMode, typeof pixelStoreABI, 'renounceRoles'> & {
        abi?: never
        functionName?: 'renounceRoles'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelStoreABI, 'renounceRoles'>({ abi: pixelStoreABI, functionName: 'renounceRoles', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"requestOwnershipHandover"`.
 */
export function usePixelStoreRequestOwnershipHandover<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof pixelStoreABI, 'requestOwnershipHandover'>['abi'],
        'requestOwnershipHandover'
      > & { functionName?: 'requestOwnershipHandover' }
    : UseContractWriteConfig<TMode, typeof pixelStoreABI, 'requestOwnershipHandover'> & {
        abi?: never
        functionName?: 'requestOwnershipHandover'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelStoreABI, 'requestOwnershipHandover'>({
    abi: pixelStoreABI,
    functionName: 'requestOwnershipHandover',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"revokeRoles"`.
 */
export function usePixelStoreRevokeRoles<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelStoreABI, 'revokeRoles'>['abi'], 'revokeRoles'> & {
        functionName?: 'revokeRoles'
      }
    : UseContractWriteConfig<TMode, typeof pixelStoreABI, 'revokeRoles'> & {
        abi?: never
        functionName?: 'revokeRoles'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelStoreABI, 'revokeRoles'>({ abi: pixelStoreABI, functionName: 'revokeRoles', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"setERC721KStorage"`.
 */
export function usePixelStoreSetErc721KStorage<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelStoreABI, 'setERC721KStorage'>['abi'], 'setERC721KStorage'> & {
        functionName?: 'setERC721KStorage'
      }
    : UseContractWriteConfig<TMode, typeof pixelStoreABI, 'setERC721KStorage'> & {
        abi?: never
        functionName?: 'setERC721KStorage'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelStoreABI, 'setERC721KStorage'>({
    abi: pixelStoreABI,
    functionName: 'setERC721KStorage',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"transferOwnership"`.
 */
export function usePixelStoreTransferOwnership<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelStoreABI, 'transferOwnership'>['abi'], 'transferOwnership'> & {
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<TMode, typeof pixelStoreABI, 'transferOwnership'> & {
        abi?: never
        functionName?: 'transferOwnership'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelStoreABI, 'transferOwnership'>({
    abi: pixelStoreABI,
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"unlock"`.
 */
export function usePixelStoreUnlock<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelStoreABI, 'unlock'>['abi'], 'unlock'> & { functionName?: 'unlock' }
    : UseContractWriteConfig<TMode, typeof pixelStoreABI, 'unlock'> & {
        abi?: never
        functionName?: 'unlock'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelStoreABI, 'unlock'>({ abi: pixelStoreABI, functionName: 'unlock', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"unlockBatch"`.
 */
export function usePixelStoreUnlockBatch<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelStoreABI, 'unlockBatch'>['abi'], 'unlockBatch'> & {
        functionName?: 'unlockBatch'
      }
    : UseContractWriteConfig<TMode, typeof pixelStoreABI, 'unlockBatch'> & {
        abi?: never
        functionName?: 'unlockBatch'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelStoreABI, 'unlockBatch'>({ abi: pixelStoreABI, functionName: 'unlockBatch', ...config } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelStoreABI}__.
 */
export function usePreparePixelStoreWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelStoreABI, TFunctionName>, 'abi'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelStoreABI, ...config } as UsePrepareContractWriteConfig<typeof pixelStoreABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"cancelOwnershipHandover"`.
 */
export function usePreparePixelStoreCancelOwnershipHandover(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelStoreABI, 'cancelOwnershipHandover'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelStoreABI, functionName: 'cancelOwnershipHandover', ...config } as UsePrepareContractWriteConfig<
    typeof pixelStoreABI,
    'cancelOwnershipHandover'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"completeOwnershipHandover"`.
 */
export function usePreparePixelStoreCompleteOwnershipHandover(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelStoreABI, 'completeOwnershipHandover'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelStoreABI, functionName: 'completeOwnershipHandover', ...config } as UsePrepareContractWriteConfig<
    typeof pixelStoreABI,
    'completeOwnershipHandover'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"grantRoles"`.
 */
export function usePreparePixelStoreGrantRoles(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelStoreABI, 'grantRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelStoreABI, functionName: 'grantRoles', ...config } as UsePrepareContractWriteConfig<
    typeof pixelStoreABI,
    'grantRoles'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"release"`.
 */
export function usePreparePixelStoreRelease(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelStoreABI, 'release'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelStoreABI, functionName: 'release', ...config } as UsePrepareContractWriteConfig<
    typeof pixelStoreABI,
    'release'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"renounceOwnership"`.
 */
export function usePreparePixelStoreRenounceOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelStoreABI, 'renounceOwnership'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelStoreABI, functionName: 'renounceOwnership', ...config } as UsePrepareContractWriteConfig<
    typeof pixelStoreABI,
    'renounceOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"renounceRoles"`.
 */
export function usePreparePixelStoreRenounceRoles(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelStoreABI, 'renounceRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelStoreABI, functionName: 'renounceRoles', ...config } as UsePrepareContractWriteConfig<
    typeof pixelStoreABI,
    'renounceRoles'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"requestOwnershipHandover"`.
 */
export function usePreparePixelStoreRequestOwnershipHandover(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelStoreABI, 'requestOwnershipHandover'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelStoreABI, functionName: 'requestOwnershipHandover', ...config } as UsePrepareContractWriteConfig<
    typeof pixelStoreABI,
    'requestOwnershipHandover'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"revokeRoles"`.
 */
export function usePreparePixelStoreRevokeRoles(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelStoreABI, 'revokeRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelStoreABI, functionName: 'revokeRoles', ...config } as UsePrepareContractWriteConfig<
    typeof pixelStoreABI,
    'revokeRoles'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"setERC721KStorage"`.
 */
export function usePreparePixelStoreSetErc721KStorage(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelStoreABI, 'setERC721KStorage'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelStoreABI, functionName: 'setERC721KStorage', ...config } as UsePrepareContractWriteConfig<
    typeof pixelStoreABI,
    'setERC721KStorage'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"transferOwnership"`.
 */
export function usePreparePixelStoreTransferOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelStoreABI, 'transferOwnership'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelStoreABI, functionName: 'transferOwnership', ...config } as UsePrepareContractWriteConfig<
    typeof pixelStoreABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"unlock"`.
 */
export function usePreparePixelStoreUnlock(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelStoreABI, 'unlock'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelStoreABI, functionName: 'unlock', ...config } as UsePrepareContractWriteConfig<
    typeof pixelStoreABI,
    'unlock'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelStoreABI}__ and `functionName` set to `"unlockBatch"`.
 */
export function usePreparePixelStoreUnlockBatch(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelStoreABI, 'unlockBatch'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelStoreABI, functionName: 'unlockBatch', ...config } as UsePrepareContractWriteConfig<
    typeof pixelStoreABI,
    'unlockBatch'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelStoreABI}__.
 */
export function usePixelStoreEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof pixelStoreABI, TEventName>, 'abi'> = {} as any
) {
  return useContractEvent({ abi: pixelStoreABI, ...config } as UseContractEventConfig<typeof pixelStoreABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelStoreABI}__ and `eventName` set to `"OwnershipHandoverCanceled"`.
 */
export function usePixelStoreOwnershipHandoverCanceledEvent(
  config: Omit<UseContractEventConfig<typeof pixelStoreABI, 'OwnershipHandoverCanceled'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelStoreABI, eventName: 'OwnershipHandoverCanceled', ...config } as UseContractEventConfig<
    typeof pixelStoreABI,
    'OwnershipHandoverCanceled'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelStoreABI}__ and `eventName` set to `"OwnershipHandoverRequested"`.
 */
export function usePixelStoreOwnershipHandoverRequestedEvent(
  config: Omit<UseContractEventConfig<typeof pixelStoreABI, 'OwnershipHandoverRequested'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelStoreABI, eventName: 'OwnershipHandoverRequested', ...config } as UseContractEventConfig<
    typeof pixelStoreABI,
    'OwnershipHandoverRequested'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelStoreABI}__ and `eventName` set to `"OwnershipTransferred"`.
 */
export function usePixelStoreOwnershipTransferredEvent(
  config: Omit<UseContractEventConfig<typeof pixelStoreABI, 'OwnershipTransferred'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelStoreABI, eventName: 'OwnershipTransferred', ...config } as UseContractEventConfig<
    typeof pixelStoreABI,
    'OwnershipTransferred'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelStoreABI}__ and `eventName` set to `"RolesUpdated"`.
 */
export function usePixelStoreRolesUpdatedEvent(
  config: Omit<UseContractEventConfig<typeof pixelStoreABI, 'RolesUpdated'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelStoreABI, eventName: 'RolesUpdated', ...config } as UseContractEventConfig<
    typeof pixelStoreABI,
    'RolesUpdated'
  >)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link pixelUniverseABI}__.
 */
export function usePixelUniverse(config: Omit<UseContractConfig, 'abi'> = {} as any) {
  return useContract({ abi: pixelUniverseABI, ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelUniverseABI}__.
 */
export function usePixelUniverseRead<TFunctionName extends string>(
  config: Omit<UseContractReadConfig<typeof pixelUniverseABI, TFunctionName>, 'abi'> = {} as any
) {
  return useContractRead({ abi: pixelUniverseABI, ...config } as UseContractReadConfig<typeof pixelUniverseABI, TFunctionName>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"erc721KInstance"`.
 */
export function usePixelUniverseErc721KInstance(
  config: Omit<UseContractReadConfig<typeof pixelUniverseABI, 'erc721KInstance'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelUniverseABI, functionName: 'erc721KInstance', ...config } as UseContractReadConfig<
    typeof pixelUniverseABI,
    'erc721KInstance'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"freeMinted"`.
 */
export function usePixelUniverseFreeMinted(
  config: Omit<UseContractReadConfig<typeof pixelUniverseABI, 'freeMinted'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelUniverseABI, functionName: 'freeMinted', ...config } as UseContractReadConfig<
    typeof pixelUniverseABI,
    'freeMinted'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"hasAllRoles"`.
 */
export function usePixelUniverseHasAllRoles(
  config: Omit<UseContractReadConfig<typeof pixelUniverseABI, 'hasAllRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelUniverseABI, functionName: 'hasAllRoles', ...config } as UseContractReadConfig<
    typeof pixelUniverseABI,
    'hasAllRoles'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"hasAnyRole"`.
 */
export function usePixelUniverseHasAnyRole(
  config: Omit<UseContractReadConfig<typeof pixelUniverseABI, 'hasAnyRole'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelUniverseABI, functionName: 'hasAnyRole', ...config } as UseContractReadConfig<
    typeof pixelUniverseABI,
    'hasAnyRole'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"ordinalsFromRoles"`.
 */
export function usePixelUniverseOrdinalsFromRoles(
  config: Omit<UseContractReadConfig<typeof pixelUniverseABI, 'ordinalsFromRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelUniverseABI, functionName: 'ordinalsFromRoles', ...config } as UseContractReadConfig<
    typeof pixelUniverseABI,
    'ordinalsFromRoles'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"owner"`.
 */
export function usePixelUniverseOwner(config: Omit<UseContractReadConfig<typeof pixelUniverseABI, 'owner'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: pixelUniverseABI, functionName: 'owner', ...config } as UseContractReadConfig<typeof pixelUniverseABI, 'owner'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"ownershipHandoverExpiresAt"`.
 */
export function usePixelUniverseOwnershipHandoverExpiresAt(
  config: Omit<UseContractReadConfig<typeof pixelUniverseABI, 'ownershipHandoverExpiresAt'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelUniverseABI, functionName: 'ownershipHandoverExpiresAt', ...config } as UseContractReadConfig<
    typeof pixelUniverseABI,
    'ownershipHandoverExpiresAt'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"ownershipHandoverValidFor"`.
 */
export function usePixelUniverseOwnershipHandoverValidFor(
  config: Omit<UseContractReadConfig<typeof pixelUniverseABI, 'ownershipHandoverValidFor'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelUniverseABI, functionName: 'ownershipHandoverValidFor', ...config } as UseContractReadConfig<
    typeof pixelUniverseABI,
    'ownershipHandoverValidFor'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"pixelStoreInstance"`.
 */
export function usePixelUniversePixelStoreInstance(
  config: Omit<UseContractReadConfig<typeof pixelUniverseABI, 'pixelStoreInstance'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelUniverseABI, functionName: 'pixelStoreInstance', ...config } as UseContractReadConfig<
    typeof pixelUniverseABI,
    'pixelStoreInstance'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"rolesFromOrdinals"`.
 */
export function usePixelUniverseRolesFromOrdinals(
  config: Omit<UseContractReadConfig<typeof pixelUniverseABI, 'rolesFromOrdinals'>, 'abi' | 'functionName'> = {} as any
) {
  return useContractRead({ abi: pixelUniverseABI, functionName: 'rolesFromOrdinals', ...config } as UseContractReadConfig<
    typeof pixelUniverseABI,
    'rolesFromOrdinals'
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"rolesOf"`.
 */
export function usePixelUniverseRolesOf(config: Omit<UseContractReadConfig<typeof pixelUniverseABI, 'rolesOf'>, 'abi' | 'functionName'> = {} as any) {
  return useContractRead({ abi: pixelUniverseABI, functionName: 'rolesOf', ...config } as UseContractReadConfig<typeof pixelUniverseABI, 'rolesOf'>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__.
 */
export function usePixelUniverseWrite<TMode extends WriteContractMode, TFunctionName extends string>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelUniverseABI, string>['abi'], TFunctionName>
    : UseContractWriteConfig<TMode, typeof pixelUniverseABI, TFunctionName> & {
        abi?: never
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelUniverseABI, TFunctionName>({ abi: pixelUniverseABI, ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"cancelOwnershipHandover"`.
 */
export function usePixelUniverseCancelOwnershipHandover<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof pixelUniverseABI, 'cancelOwnershipHandover'>['abi'],
        'cancelOwnershipHandover'
      > & { functionName?: 'cancelOwnershipHandover' }
    : UseContractWriteConfig<TMode, typeof pixelUniverseABI, 'cancelOwnershipHandover'> & {
        abi?: never
        functionName?: 'cancelOwnershipHandover'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelUniverseABI, 'cancelOwnershipHandover'>({
    abi: pixelUniverseABI,
    functionName: 'cancelOwnershipHandover',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"completeOwnershipHandover"`.
 */
export function usePixelUniverseCompleteOwnershipHandover<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof pixelUniverseABI, 'completeOwnershipHandover'>['abi'],
        'completeOwnershipHandover'
      > & { functionName?: 'completeOwnershipHandover' }
    : UseContractWriteConfig<TMode, typeof pixelUniverseABI, 'completeOwnershipHandover'> & {
        abi?: never
        functionName?: 'completeOwnershipHandover'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelUniverseABI, 'completeOwnershipHandover'>({
    abi: pixelUniverseABI,
    functionName: 'completeOwnershipHandover',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"grantRoles"`.
 */
export function usePixelUniverseGrantRoles<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelUniverseABI, 'grantRoles'>['abi'], 'grantRoles'> & {
        functionName?: 'grantRoles'
      }
    : UseContractWriteConfig<TMode, typeof pixelUniverseABI, 'grantRoles'> & {
        abi?: never
        functionName?: 'grantRoles'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelUniverseABI, 'grantRoles'>({ abi: pixelUniverseABI, functionName: 'grantRoles', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"mintWithFrames"`.
 */
export function usePixelUniverseMintWithFrames<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelUniverseABI, 'mintWithFrames'>['abi'], 'mintWithFrames'> & {
        functionName?: 'mintWithFrames'
      }
    : UseContractWriteConfig<TMode, typeof pixelUniverseABI, 'mintWithFrames'> & {
        abi?: never
        functionName?: 'mintWithFrames'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelUniverseABI, 'mintWithFrames'>({
    abi: pixelUniverseABI,
    functionName: 'mintWithFrames',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"renounceOwnership"`.
 */
export function usePixelUniverseRenounceOwnership<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelUniverseABI, 'renounceOwnership'>['abi'], 'renounceOwnership'> & {
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<TMode, typeof pixelUniverseABI, 'renounceOwnership'> & {
        abi?: never
        functionName?: 'renounceOwnership'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelUniverseABI, 'renounceOwnership'>({
    abi: pixelUniverseABI,
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"renounceRoles"`.
 */
export function usePixelUniverseRenounceRoles<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelUniverseABI, 'renounceRoles'>['abi'], 'renounceRoles'> & {
        functionName?: 'renounceRoles'
      }
    : UseContractWriteConfig<TMode, typeof pixelUniverseABI, 'renounceRoles'> & {
        abi?: never
        functionName?: 'renounceRoles'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelUniverseABI, 'renounceRoles'>({ abi: pixelUniverseABI, functionName: 'renounceRoles', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"requestOwnershipHandover"`.
 */
export function usePixelUniverseRequestOwnershipHandover<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof pixelUniverseABI, 'requestOwnershipHandover'>['abi'],
        'requestOwnershipHandover'
      > & { functionName?: 'requestOwnershipHandover' }
    : UseContractWriteConfig<TMode, typeof pixelUniverseABI, 'requestOwnershipHandover'> & {
        abi?: never
        functionName?: 'requestOwnershipHandover'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelUniverseABI, 'requestOwnershipHandover'>({
    abi: pixelUniverseABI,
    functionName: 'requestOwnershipHandover',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"revokeRoles"`.
 */
export function usePixelUniverseRevokeRoles<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelUniverseABI, 'revokeRoles'>['abi'], 'revokeRoles'> & {
        functionName?: 'revokeRoles'
      }
    : UseContractWriteConfig<TMode, typeof pixelUniverseABI, 'revokeRoles'> & {
        abi?: never
        functionName?: 'revokeRoles'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelUniverseABI, 'revokeRoles'>({ abi: pixelUniverseABI, functionName: 'revokeRoles', ...config } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"transferOwnership"`.
 */
export function usePixelUniverseTransferOwnership<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<TMode, PrepareWriteContractResult<typeof pixelUniverseABI, 'transferOwnership'>['abi'], 'transferOwnership'> & {
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<TMode, typeof pixelUniverseABI, 'transferOwnership'> & {
        abi?: never
        functionName?: 'transferOwnership'
      } = {} as any
) {
  return useContractWrite<TMode, typeof pixelUniverseABI, 'transferOwnership'>({
    abi: pixelUniverseABI,
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__.
 */
export function usePreparePixelUniverseWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelUniverseABI, TFunctionName>, 'abi'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelUniverseABI, ...config } as UsePrepareContractWriteConfig<typeof pixelUniverseABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"cancelOwnershipHandover"`.
 */
export function usePreparePixelUniverseCancelOwnershipHandover(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelUniverseABI, 'cancelOwnershipHandover'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelUniverseABI, functionName: 'cancelOwnershipHandover', ...config } as UsePrepareContractWriteConfig<
    typeof pixelUniverseABI,
    'cancelOwnershipHandover'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"completeOwnershipHandover"`.
 */
export function usePreparePixelUniverseCompleteOwnershipHandover(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelUniverseABI, 'completeOwnershipHandover'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelUniverseABI, functionName: 'completeOwnershipHandover', ...config } as UsePrepareContractWriteConfig<
    typeof pixelUniverseABI,
    'completeOwnershipHandover'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"grantRoles"`.
 */
export function usePreparePixelUniverseGrantRoles(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelUniverseABI, 'grantRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelUniverseABI, functionName: 'grantRoles', ...config } as UsePrepareContractWriteConfig<
    typeof pixelUniverseABI,
    'grantRoles'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"mintWithFrames"`.
 */
export function usePreparePixelUniverseMintWithFrames(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelUniverseABI, 'mintWithFrames'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelUniverseABI, functionName: 'mintWithFrames', ...config } as UsePrepareContractWriteConfig<
    typeof pixelUniverseABI,
    'mintWithFrames'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"renounceOwnership"`.
 */
export function usePreparePixelUniverseRenounceOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelUniverseABI, 'renounceOwnership'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelUniverseABI, functionName: 'renounceOwnership', ...config } as UsePrepareContractWriteConfig<
    typeof pixelUniverseABI,
    'renounceOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"renounceRoles"`.
 */
export function usePreparePixelUniverseRenounceRoles(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelUniverseABI, 'renounceRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelUniverseABI, functionName: 'renounceRoles', ...config } as UsePrepareContractWriteConfig<
    typeof pixelUniverseABI,
    'renounceRoles'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"requestOwnershipHandover"`.
 */
export function usePreparePixelUniverseRequestOwnershipHandover(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelUniverseABI, 'requestOwnershipHandover'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelUniverseABI, functionName: 'requestOwnershipHandover', ...config } as UsePrepareContractWriteConfig<
    typeof pixelUniverseABI,
    'requestOwnershipHandover'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"revokeRoles"`.
 */
export function usePreparePixelUniverseRevokeRoles(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelUniverseABI, 'revokeRoles'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelUniverseABI, functionName: 'revokeRoles', ...config } as UsePrepareContractWriteConfig<
    typeof pixelUniverseABI,
    'revokeRoles'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link pixelUniverseABI}__ and `functionName` set to `"transferOwnership"`.
 */
export function usePreparePixelUniverseTransferOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof pixelUniverseABI, 'transferOwnership'>, 'abi' | 'functionName'> = {} as any
) {
  return usePrepareContractWrite({ abi: pixelUniverseABI, functionName: 'transferOwnership', ...config } as UsePrepareContractWriteConfig<
    typeof pixelUniverseABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelUniverseABI}__.
 */
export function usePixelUniverseEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof pixelUniverseABI, TEventName>, 'abi'> = {} as any
) {
  return useContractEvent({ abi: pixelUniverseABI, ...config } as UseContractEventConfig<typeof pixelUniverseABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelUniverseABI}__ and `eventName` set to `"OwnershipHandoverCanceled"`.
 */
export function usePixelUniverseOwnershipHandoverCanceledEvent(
  config: Omit<UseContractEventConfig<typeof pixelUniverseABI, 'OwnershipHandoverCanceled'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelUniverseABI, eventName: 'OwnershipHandoverCanceled', ...config } as UseContractEventConfig<
    typeof pixelUniverseABI,
    'OwnershipHandoverCanceled'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelUniverseABI}__ and `eventName` set to `"OwnershipHandoverRequested"`.
 */
export function usePixelUniverseOwnershipHandoverRequestedEvent(
  config: Omit<UseContractEventConfig<typeof pixelUniverseABI, 'OwnershipHandoverRequested'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelUniverseABI, eventName: 'OwnershipHandoverRequested', ...config } as UseContractEventConfig<
    typeof pixelUniverseABI,
    'OwnershipHandoverRequested'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelUniverseABI}__ and `eventName` set to `"OwnershipTransferred"`.
 */
export function usePixelUniverseOwnershipTransferredEvent(
  config: Omit<UseContractEventConfig<typeof pixelUniverseABI, 'OwnershipTransferred'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelUniverseABI, eventName: 'OwnershipTransferred', ...config } as UseContractEventConfig<
    typeof pixelUniverseABI,
    'OwnershipTransferred'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link pixelUniverseABI}__ and `eventName` set to `"RolesUpdated"`.
 */
export function usePixelUniverseRolesUpdatedEvent(
  config: Omit<UseContractEventConfig<typeof pixelUniverseABI, 'RolesUpdated'>, 'abi' | 'eventName'> = {} as any
) {
  return useContractEvent({ abi: pixelUniverseABI, eventName: 'RolesUpdated', ...config } as UseContractEventConfig<
    typeof pixelUniverseABI,
    'RolesUpdated'
  >)
}
